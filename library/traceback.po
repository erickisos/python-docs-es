# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get
# the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-21 16:38-0300\n"
"PO-Revision-Date: 2023-12-24 12:20+0100\n"
"Last-Translator: Jaime Resano <resano.138736@e.unavarra.es>\n"
"Language: es_ES\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../Doc/library/traceback.rst:2
#, fuzzy
msgid ":mod:`!traceback` --- Print or retrieve a stack traceback"
msgstr ":mod:`traceback` --- Imprimir o recuperar un seguimiento de pila"

#: ../Doc/library/traceback.rst:7
msgid "**Source code:** :source:`Lib/traceback.py`"
msgstr "**Código fuente:** :source:`Lib/traceback.py`"

#: ../Doc/library/traceback.rst:11
msgid ""
"This module provides a standard interface to extract, format and print stack "
"traces of Python programs.  It exactly mimics the behavior of the Python "
"interpreter when it prints a stack trace.  This is useful when you want to "
"print stack traces under program control, such as in a \"wrapper\" around "
"the interpreter."
msgstr ""
"Este módulo brinda una interfaz estándar para extraer, formatear y mostrar "
"trazas de pilas de programas de Python. Dicho módulo copia el comportamiento "
"del intérprete de Python cuando muestra una traza de pila. Es útil a la hora "
"de querer mostrar trazas de pilas bajo el control del programa, como si de "
"un *wrapper* alrededor del intérprete se tratara."

#: ../Doc/library/traceback.rst:19
#, fuzzy
msgid ""
"The module uses :ref:`traceback objects <traceback-objects>` --- these are "
"objects of type :class:`types.TracebackType`, which are assigned to the :"
"attr:`~BaseException.__traceback__` field of :class:`BaseException` "
"instances."
msgstr ""
"El módulo usa objetos *traceback* -- estos son objetos de tipo :class:`types."
"TracebackType`, que se asignan al campo ``__traceback__`` de las instancias "
"de :class:`BaseException`."

#: ../Doc/library/traceback.rst:27
msgid "Module :mod:`faulthandler`"
msgstr "Módulo :mod:`faulthandler`"

#: ../Doc/library/traceback.rst:27
msgid ""
"Used to dump Python tracebacks explicitly, on a fault, after a timeout, or "
"on a user signal."
msgstr ""
"Usado para volcar explícitamente los rastreos Python, en un error, después "
"de un tiempo de espera (*timeout*), o en una señal de usuario."

#: ../Doc/library/traceback.rst:29
msgid "Module :mod:`pdb`"
msgstr "Módulo :mod:`pdb`"

#: ../Doc/library/traceback.rst:30
msgid "Interactive source code debugger for Python programs."
msgstr "Depurador interactivo de código fuente para programas Python."

#: ../Doc/library/traceback.rst:32
msgid "The module defines the following functions:"
msgstr "El módulo define las siguientes funciones:"

#: ../Doc/library/traceback.rst:36
#, fuzzy
msgid ""
"Print up to *limit* stack trace entries from :ref:`traceback object "
"<traceback-objects>` *tb* (starting from the caller's frame) if *limit* is "
"positive.  Otherwise, print the last ``abs(limit)`` entries.  If *limit* is "
"omitted or ``None``, all entries are printed.  If *file* is omitted or "
"``None``, the output goes to :data:`sys.stderr`; otherwise it should be an "
"open :term:`file <file object>` or :term:`file-like object` to receive the "
"output."
msgstr ""
"Muestra hasta *limit* entradas de trazas de pila desde el objeto *traceback* "
"*tb* (empezando desde el marco de la llamada) si *limit* es positivo. De lo "
"contrario, muestra las últimas ``abs(limit)`` entradas. Si *limit* es "
"omitido o ``None``, todas las entradas se muestran. Si *file* es omitido o "
"``None``, la salida va a ``sys.stderr``; de lo contrario, debería ser un "
"archivo o un objeto de tipo similar a un archivo para recibir la salida."

#: ../Doc/library/traceback.rst:47
msgid ""
"The meaning of the *limit* parameter is different than the meaning of :const:"
"`sys.tracebacklimit`. A negative *limit* value corresponds to a positive "
"value of :const:`!sys.tracebacklimit`, whereas the behaviour of a positive "
"*limit* value cannot be achieved with :const:`!sys.tracebacklimit`."
msgstr ""

#: ../Doc/library/traceback.rst:53 ../Doc/library/traceback.rst:118
msgid "Added negative *limit* support."
msgstr "Soporte para *limit* negativo añadido."

#: ../Doc/library/traceback.rst:60
#, fuzzy
msgid ""
"Print exception information and stack trace entries from :ref:`traceback "
"object <traceback-objects>` *tb* to *file*. This differs from :func:"
"`print_tb` in the following ways:"
msgstr ""
"Muestra información de excepciones y entradas de trazas de pila desde el "
"objeto *traceback* *tb* a *file*. Esto difiere de :func:`print_tb` de las "
"siguientes maneras:"

#: ../Doc/library/traceback.rst:65
msgid ""
"if *tb* is not ``None``, it prints a header ``Traceback (most recent call "
"last):``"
msgstr ""
"si *tb* no es ``None``, muestra una cabecera ``Traceback (most recent call "
"last):``"

#: ../Doc/library/traceback.rst:68
msgid "it prints the exception type and *value* after the stack trace"
msgstr ""
"imprime el tipo de excepción y *value* después del seguimiento de la pila"

#: ../Doc/library/traceback.rst:72
msgid ""
"if *type(value)* is :exc:`SyntaxError` and *value* has the appropriate "
"format, it prints the line where the syntax error occurred with a caret "
"indicating the approximate position of the error."
msgstr ""
"si *type(value)* es :exc:`SyntaxError` y *value* tiene el formato apropiado, "
"muestra la línea donde el error sintáctico ha ocurrido con un cursor "
"indicando la posición aproximada del error."

#: ../Doc/library/traceback.rst:76
msgid ""
"Since Python 3.10, instead of passing *value* and *tb*, an exception object "
"can be passed as the first argument. If *value* and *tb* are provided, the "
"first argument is ignored in order to provide backwards compatibility."
msgstr ""
"Desde Python 3.10, en lugar de pasar *value* y *tb*, se puede pasar un "
"objeto de excepción como primer argumento. Si se proporcionan *value* y "
"*tb*, el primer argumento se ignora para proporcionar compatibilidad con "
"versiones anteriores."

#: ../Doc/library/traceback.rst:80
#, fuzzy
msgid ""
"The optional *limit* argument has the same meaning as for :func:`print_tb`. "
"If *chain* is true (the default), then chained exceptions (the :attr:"
"`~BaseException.__cause__` or :attr:`~BaseException.__context__` attributes "
"of the exception) will be printed as well, like the interpreter itself does "
"when printing an unhandled exception."
msgstr ""
"El argumento opcional *limit* tiene el mismo significado que para :func:"
"`print_tb`. Si *chain* es verdad (por defecto), entonces excepciones "
"encadenadas (:attr:`__cause__` o :attr:`__context__` atributos de la "
"excepción) también se imprimirán, como lo hace el propio intérprete al "
"imprimir una excepción no controlada."

#: ../Doc/library/traceback.rst:87 ../Doc/library/traceback.rst:191
msgid "The *etype* argument is ignored and inferred from the type of *value*."
msgstr "El argumento *etype* es ignorado e infiere desde el tipo de *value*."

#: ../Doc/library/traceback.rst:90 ../Doc/library/traceback.rst:171
msgid ""
"The *etype* parameter has been renamed to *exc* and is now positional-only."
msgstr ""
"El parámetro *etype* ha cambiado de nombre a *exc* y ahora es solo "
"posicional."

#: ../Doc/library/traceback.rst:97
msgid ""
"This is a shorthand for ``print_exception(sys.exception(), limit, file, "
"chain)``."
msgstr ""
"Esto es un atajo para ``print_exception(sys.exception(), limit, file, "
"chain)``."

#: ../Doc/library/traceback.rst:103
msgid ""
"This is a shorthand for ``print_exception(sys.last_exc, limit, file, "
"chain)``.  In general it will work only after an exception has reached an "
"interactive prompt (see :data:`sys.last_exc`)."
msgstr ""
"Esto es un atajo para ``print_exception(sys.last_exc, limit, file, chain)``. "
"En general, solo funciona después de que una excepción ha alcanzado un "
"prompt interactivo (ver :data:`sys.last_exc`)."

#: ../Doc/library/traceback.rst:110
#, fuzzy
msgid ""
"Print up to *limit* stack trace entries (starting from the invocation point) "
"if *limit* is positive.  Otherwise, print the last ``abs(limit)`` entries.  "
"If *limit* is omitted or ``None``, all entries are printed. The optional *f* "
"argument can be used to specify an alternate :ref:`stack frame <frame-"
"objects>` to start.  The optional *file* argument has the same meaning as "
"for :func:`print_tb`."
msgstr ""
"Muestra hasta *limit* entradas de trazas de pila (empezando desde el punto "
"de invocación) si *limit* es positivo. De lo contrario, muestra las últimas "
"``abs(limit)`` entradas. Si *limit* es omitido o ``None``, todas las "
"entradas se muestran. El argumento opcional *f* puede ser usado para "
"especificar un marco de pila alternativo para empezar. El argumento opcional "
"*file* tiene el mismo significado que para :func:`print_tb`."

#: ../Doc/library/traceback.rst:124
#, fuzzy
msgid ""
"Return a :class:`StackSummary` object representing a list of \"pre-"
"processed\" stack trace entries extracted from the :ref:`traceback object "
"<traceback-objects>` *tb*.  It is useful for alternate formatting of stack "
"traces.  The optional *limit* argument has the same meaning as for :func:"
"`print_tb`.  A \"pre-processed\" stack trace entry is a :class:"
"`FrameSummary` object containing attributes :attr:`~FrameSummary.filename`, :"
"attr:`~FrameSummary.lineno`, :attr:`~FrameSummary.name`, and :attr:"
"`~FrameSummary.line` representing the information that is usually printed "
"for a stack trace."
msgstr ""
"Retorna un objeto :class:`StackSummary` representando una lista de entradas "
"de trazas de pila \"pre-procesadas\" extraídas del objeto *traceback* *tb*. "
"Esto es útil para el formateo alternativo de trazas de pila. El argumento "
"opcional *limit* tiene el mismo significado que para :func:`print_tb`. Una "
"entrada de traza de pila \"pre-procesada\" es un objeto :class:"
"`FrameSummary` que contiene los atributos :attr:`~FrameSummary.filename`, :"
"attr:`~FrameSummary.lineno`, :attr:`~FrameSummary.name`, y :attr:"
"`~FrameSummary.line` representando la información que normalmente es "
"mostrada por una traza de pila. El atributo :attr:`~FrameSummary.line` es "
"una cadena con espacios en blanco iniciales y finales *stripped*; si la "
"fuente no está disponible, es ``None``."

#: ../Doc/library/traceback.rst:137
#, fuzzy
msgid ""
"Extract the raw traceback from the current :ref:`stack frame <frame-"
"objects>`.  The return value has the same format as for :func:`extract_tb`.  "
"The optional *f* and *limit* arguments have the same meaning as for :func:"
"`print_stack`."
msgstr ""
"Extrae el seguimiento de pila crudo desde el marco de pila actual. El valor "
"retornado tiene el mismo formato que para :func:`extract_tb`. Los argumentos "
"opcionales *f* y *limit* tienen el mismo significado que para :func:"
"`print_stack`."

#: ../Doc/library/traceback.rst:145
msgid ""
"Given a list of tuples or :class:`FrameSummary` objects as returned by :func:"
"`extract_tb` or :func:`extract_stack`, return a list of strings ready for "
"printing.  Each string in the resulting list corresponds to the item with "
"the same index in the argument list.  Each string ends in a newline; the "
"strings may contain internal newlines as well, for those items whose source "
"text line is not ``None``."
msgstr ""
"Dada una lista de tuplas u objetos :class:`FrameSummary` según lo retornado "
"por :func:`extract_tb` o :func:`extract_stack`, retorna una lista de cadenas "
"preparadas para ser mostradas. Cada cadena en la lista resultante "
"corresponde con el elemento con el mismo índice en la lista de argumentos. "
"Cada cadena finaliza en una nueva línea; las cadenas pueden contener nuevas "
"líneas internas también, para aquellos elementos cuya línea de texto de "
"origen no es ``None``."

#: ../Doc/library/traceback.rst:155
#, fuzzy
msgid ""
"Format the exception part of a traceback using an exception value such as "
"given by :data:`sys.last_value`.  The return value is a list of strings, "
"each ending in a newline.  The list contains the exception's message, which "
"is normally a single string; however, for :exc:`SyntaxError` exceptions, it "
"contains several lines that (when printed) display detailed information "
"about where the syntax error occurred. Following the message, the list "
"contains the exception's :attr:`notes <BaseException.__notes__>`."
msgstr ""
"Formatee la parte de excepción de un rastreo utilizando un valor de "
"excepción como el proporcionado por ``sys.last_value``. El valor de retorno "
"es una lista de cadenas, cada una termina en una nueva línea. Normalmente, "
"la lista contiene una sola cadena; sin embargo, para las excepciones :exc:"
"`SyntaxError`, contiene varias líneas que (cuando se imprimen) muestran "
"información detallada sobre dónde ocurrió el error de sintaxis. Después del "
"mensaje, la lista contiene las :attr:`notas <BaseException.__notes__>` de "
"las excepciones."

#: ../Doc/library/traceback.rst:163
msgid ""
"Since Python 3.10, instead of passing *value*, an exception object can be "
"passed as the first argument.  If *value* is provided, the first argument is "
"ignored in order to provide backwards compatibility."
msgstr ""
"Desde Python 3,10, en lugar de pasar *value*, un objeto de excepción se "
"puede pasar como primer argumento. Si se proporciona *value*, el primer "
"argumento se ignora el fin de proporcionar compatibilidad hacia atrás."

#: ../Doc/library/traceback.rst:167 ../Doc/library/traceback.rst:394
msgid ""
"When *show_group* is ``True``, and the exception is an instance of :exc:"
"`BaseExceptionGroup`, the nested exceptions are included as well, "
"recursively, with indentation relative to their nesting depth."
msgstr ""

#: ../Doc/library/traceback.rst:175
#, fuzzy
msgid ""
"The returned list now includes any :attr:`notes <BaseException.__notes__>` "
"attached to the exception."
msgstr ""
"La lista retornada ahora incluye algunas notas adjuntadas a la excepción."

#: ../Doc/library/traceback.rst:179
msgid "*show_group* parameter was added."
msgstr ""

#: ../Doc/library/traceback.rst:185
msgid ""
"Format a stack trace and the exception information.  The arguments  have the "
"same meaning as the corresponding arguments to :func:`print_exception`.  The "
"return value is a list of strings, each ending in a newline and some "
"containing internal newlines.  When these lines are concatenated and "
"printed, exactly the same text is printed as does :func:`print_exception`."
msgstr ""
"Formatea una traza de pila y la información de la excepción. Los argumentos "
"tienen el mismo significado que los argumentos correspondientes a :func:"
"`print_exception`. El valor retornado es una lista de cadenas, acabando cada "
"una en una nueva línea y algunas contienen nuevas líneas internas. Cuando "
"estas líneas son concatenadas y mostradas, exactamente el mismo texto es "
"mostrado como hace :func:`print_exception`."

#: ../Doc/library/traceback.rst:194
msgid ""
"This function's behavior and signature were modified to match :func:"
"`print_exception`."
msgstr ""
"El comportamiento y la firma de esta función se modificaron para coincidir "
"con :func:`print_exception`."

#: ../Doc/library/traceback.rst:201
msgid ""
"This is like ``print_exc(limit)`` but returns a string instead of printing "
"to a file."
msgstr ""
"Esto es como ``print_exc(limit)`` pero retorna una cadena en lugar de "
"imprimirlo en un archivo."

#: ../Doc/library/traceback.rst:207
msgid "A shorthand for ``format_list(extract_tb(tb, limit))``."
msgstr "Un atajo para ``format_list(extract_tb(tb, limit))``."

#: ../Doc/library/traceback.rst:212
msgid "A shorthand for ``format_list(extract_stack(f, limit))``."
msgstr "Un atajo para ``format_list(extract_stack(f, limit))``."

#: ../Doc/library/traceback.rst:216
#, fuzzy
msgid ""
"Clears the local variables of all the stack frames in a :ref:`traceback "
"<traceback-objects>` *tb* by calling the :meth:`~frame.clear` method of "
"each :ref:`frame object <frame-objects>`."
msgstr ""
"Limpia las variables locales de todos los marcos de pila en un seguimiento "
"de pila *tb* llamando al método :meth:`clear` de cada objeto de marco."

#: ../Doc/library/traceback.rst:225
#, fuzzy
msgid ""
"Walk a stack following :attr:`f.f_back <frame.f_back>` from the given frame, "
"yielding the frame and line number for each frame. If *f* is ``None``, the "
"current stack is used. This helper is used with :meth:`StackSummary.extract`."
msgstr ""
"Recorre una pila siguiendo ``f.f_back`` desde el marco dado, produciendo el "
"marco y el número de línea de cada marco. Si *f* es ``None``, la pila actual "
"es usada. Este auxiliar es usado con :meth:`StackSummary.extract`."

#: ../Doc/library/traceback.rst:234
#, fuzzy
msgid ""
"Walk a traceback following :attr:`~traceback.tb_next` yielding the frame and "
"line number for each frame. This helper is used with :meth:`StackSummary."
"extract`."
msgstr ""
"Recorre un seguimiento de pila siguiendo ``tb_next`` produciendo el marco y "
"el número de línea de cada marco. Este auxiliar es usado con :meth:"
"`StackSummary.extract`."

#: ../Doc/library/traceback.rst:240
msgid "The module also defines the following classes:"
msgstr "El módulo también define las siguientes clases:"

#: ../Doc/library/traceback.rst:243
#, fuzzy
msgid ":class:`!TracebackException` Objects"
msgstr "Objetos :class:`TracebackException`"

#: ../Doc/library/traceback.rst:247
#, fuzzy
msgid ""
":class:`!TracebackException` objects are created from actual exceptions to "
"capture data for later printing in a lightweight fashion."
msgstr ""
"Los objetos :class:`TracebackException` son creados a partir de excepciones "
"reales para capturar datos para su posterior impresión de una manera ligera."

#: ../Doc/library/traceback.rst:252 ../Doc/library/traceback.rst:359
msgid ""
"Capture an exception for later rendering. *limit*, *lookup_lines* and "
"*capture_locals* are as for the :class:`StackSummary` class."
msgstr ""
"Captura una excepción para su posterior procesado. *limit*, *lookup_lines* y "
"*capture_locals* son como para la clase :class:`StackSummary`."

#: ../Doc/library/traceback.rst:255
#, fuzzy
msgid ""
"If *compact* is true, only data that is required by :class:`!"
"TracebackException`'s :meth:`format` method is saved in the class "
"attributes. In particular, the :attr:`__context__` field is calculated only "
"if :attr:`__cause__` is ``None`` and :attr:`__suppress_context__` is false."
msgstr ""
"Si *compact* es verdadero, solo los datos requeridos por el método "
"``format`` de :class:`TracebackException` se guardan en los atributos de "
"clase. En particular, el campo ``__context__`` se calcula solo si "
"``__cause__`` es ``None`` y ``__suppress_context__`` es falso."

#: ../Doc/library/traceback.rst:261 ../Doc/library/traceback.rst:362
msgid ""
"Note that when locals are captured, they are also shown in the traceback."
msgstr ""
"Tenga en cuenta que cuando se capturan locales, también se muestran en el "
"rastreo."

#: ../Doc/library/traceback.rst:263
msgid ""
"*max_group_width* and *max_group_depth* control the formatting of exception "
"groups (see :exc:`BaseExceptionGroup`). The depth refers to the nesting "
"level of the group, and the width refers to the size of a single exception "
"group's exceptions array. The formatted output is truncated when either "
"limit is exceeded."
msgstr ""
"*max_group_width* (*anchura máxima del grupo*) y *max_group_depth* "
"(*profundidad máxima del grupo*) controlan el formato del grupo de "
"excepciones (ver :exc:`BaseExceptionGroup`). La profundidad (*depth*) se "
"refiere al nivel de anidamiento del grupo, y la anchura (*width*) se refiere "
"al tamaño de una excepción simple perteneciente al arreglo del grupo de "
"excepciones. El formato de salida se trunca cuando se excede el límite."

#: ../Doc/library/traceback.rst:269
msgid "Added the *compact* parameter."
msgstr "Se agregó el parámetro *compact*."

#: ../Doc/library/traceback.rst:272
msgid "Added the *max_group_width* and *max_group_depth* parameters."
msgstr "Se agregaron los parámetros *max_group_width* y *max_group_depth*"

#: ../Doc/library/traceback.rst:277
#, fuzzy
msgid ""
"A :class:`!TracebackException` of the original :attr:`~BaseException."
"__cause__`."
msgstr "Una clase :class:`TracebackException` del original ``__cause__``."

#: ../Doc/library/traceback.rst:282
#, fuzzy
msgid ""
"A :class:`!TracebackException` of the original :attr:`~BaseException."
"__context__`."
msgstr "Una clase :class:`TracebackException` del original ``__context__``."

#: ../Doc/library/traceback.rst:287
#, fuzzy
msgid ""
"If ``self`` represents an :exc:`ExceptionGroup`, this field holds a list of :"
"class:`!TracebackException` instances representing the nested exceptions. "
"Otherwise it is ``None``."
msgstr ""
"Si ``self`` representa a una :exc:`ExceptionGroup`, este campo mantiene una "
"lista de instancias de :class:`TracebackException` representando las "
"excepciones anidadas. En otro caso será ``None``."

#: ../Doc/library/traceback.rst:295
#, fuzzy
msgid ""
"The :attr:`~BaseException.__suppress_context__` value from the original "
"exception."
msgstr "El valor ``__suppress_context__`` de la excepción original."

#: ../Doc/library/traceback.rst:300
#, fuzzy
msgid ""
"The :attr:`~BaseException.__notes__` value from the original exception, or "
"``None`` if the exception does not have any notes. If it is not ``None`` is "
"it formatted in the traceback after the exception string."
msgstr ""
"Los valores de las ``__notes__`` de la excepción original, o ``None`` si la "
"excepción no tiene ninguna nota. Si no es ``None`` se formatea en el rastreo "
"después de la cadena de texto de la excepción."

#: ../Doc/library/traceback.rst:309
msgid "A :class:`StackSummary` representing the traceback."
msgstr "Una clase :class:`StackSummary` representando el seguimiento de pila."

#: ../Doc/library/traceback.rst:313
msgid "The class of the original traceback."
msgstr "La clase del seguimiento de pila original."

#: ../Doc/library/traceback.rst:319
#, fuzzy
msgid "String display of the class of the original exception."
msgstr "La clase del seguimiento de pila original."

#: ../Doc/library/traceback.rst:325
msgid "For syntax errors - the file name where the error occurred."
msgstr ""
"Para errores sintácticos - el nombre del archivo donde el error ha ocurrido."

#: ../Doc/library/traceback.rst:329
msgid "For syntax errors - the line number where the error occurred."
msgstr ""
"Para errores sintácticos - el número de línea donde el error ha ocurrido."

#: ../Doc/library/traceback.rst:333
msgid ""
"For syntax errors - the end line number where the error occurred. Can be "
"``None`` if not present."
msgstr ""
"Para errores sintácticos - el número de línea donde el error ha ocurrido. "
"Puede ser ``None`` si no está presente."

#: ../Doc/library/traceback.rst:340
msgid "For syntax errors - the text where the error occurred."
msgstr "Para errores sintácticos - el texto donde el error ha ocurrido."

#: ../Doc/library/traceback.rst:344
msgid "For syntax errors - the offset into the text where the error occurred."
msgstr ""
"Para errores sintácticos - el *offset* en el texto donde el error ha "
"ocurrido."

#: ../Doc/library/traceback.rst:348
msgid ""
"For syntax errors - the end offset into the text where the error occurred. "
"Can be ``None`` if not present."
msgstr ""
"Para errores sintácticos - el *offset* en el texto donde el error ha "
"ocurrido. Puede ser ``None`` si no está presente."

#: ../Doc/library/traceback.rst:355
msgid "For syntax errors - the compiler error message."
msgstr "Para errores sintácticos - el mensaje de error del compilador."

#: ../Doc/library/traceback.rst:366
msgid ""
"Print to *file* (default ``sys.stderr``) the exception information returned "
"by :meth:`format`."
msgstr ""
"Imprime en *file* (``sys.stderr`` por defecto) la información de la "
"excepción retornada por :meth:`format`."

#: ../Doc/library/traceback.rst:373
msgid "Format the exception."
msgstr "Formatea la excepción."

#: ../Doc/library/traceback.rst:375
#, fuzzy
msgid ""
"If *chain* is not ``True``, :attr:`__cause__` and :attr:`__context__` will "
"not be formatted."
msgstr ""
"Si *chain* no es ``True``, ``__cause__`` y ``__context__`` no serán "
"formateados."

#: ../Doc/library/traceback.rst:378
msgid ""
"The return value is a generator of strings, each ending in a newline and "
"some containing internal newlines. :func:`~traceback.print_exception` is a "
"wrapper around this method which just prints the lines to a file."
msgstr ""
"El valor retornado es un generador de cadenas, donde cada una acaba en una "
"nueva línea y algunas contienen nuevas líneas internas. :func:`~traceback."
"print_exception` es un contenedor alrededor de este método que simplemente "
"muestra las líneas de un archivo."

#: ../Doc/library/traceback.rst:384
msgid "Format the exception part of the traceback."
msgstr "Formatea la parte de la excepción de un seguimiento de pila."

#: ../Doc/library/traceback.rst:386
msgid "The return value is a generator of strings, each ending in a newline."
msgstr ""
"El valor retornado es un generador de cadenas, donde cada una acaba en una "
"nueva línea."

#: ../Doc/library/traceback.rst:388
#, fuzzy
msgid ""
"When *show_group* is ``False``, the generator emits the exception's message "
"followed by its notes (if it has any). The exception message is normally a "
"single string; however, for :exc:`SyntaxError` exceptions, it consists of "
"several lines that (when printed) display detailed information about where "
"the syntax error occurred."
msgstr ""
"El generador emite el mensaje de la excepción seguida por sus notas (si "
"tiene alguna). El mensaje de excepción es normalmente una sola cadena; , sin "
"embargo, para excepciones :exc:`SyntaxError`, este emite múltiples líneas "
"que (cuando son mostradas) imprimen información detallada sobre dónde ha "
"ocurrido el error sintáctico."

#: ../Doc/library/traceback.rst:398
#, fuzzy
msgid ""
"The exception's :attr:`notes <BaseException.__notes__>` are now included in "
"the output."
msgstr "Las notas de las excepciones son incluidas ahora en la salida."

#: ../Doc/library/traceback.rst:402
#, fuzzy
msgid "Added the *show_group* parameter."
msgstr "Se agregó el parámetro *compact*."

#: ../Doc/library/traceback.rst:407
#, fuzzy
msgid ":class:`!StackSummary` Objects"
msgstr "Objetos :class:`StackSummary`"

#: ../Doc/library/traceback.rst:411
#, fuzzy
msgid ""
":class:`!StackSummary` objects represent a call stack ready for formatting."
msgstr ""
"Los objetos :class:`StackSummary` representan una pila de llamadas lista "
"para formatear."

#: ../Doc/library/traceback.rst:417
#, fuzzy
msgid ""
"Construct a :class:`!StackSummary` object from a frame generator (such as is "
"returned by :func:`~traceback.walk_stack` or :func:`~traceback.walk_tb`)."
msgstr ""
"Construye un objeto :class:`StackSummary` desde un generador de marcos (tal "
"como es retornado por :func:`~traceback.walk_stack` o :func:`~traceback."
"walk_tb`)."

#: ../Doc/library/traceback.rst:421
#, fuzzy
msgid ""
"If *limit* is supplied, only this many frames are taken from *frame_gen*. If "
"*lookup_lines* is ``False``, the returned :class:`FrameSummary` objects will "
"not have read their lines in yet, making the cost of creating the :class:`!"
"StackSummary` cheaper (which may be valuable if it may not actually get "
"formatted). If *capture_locals* is ``True`` the local variables in each :"
"class:`!FrameSummary` are captured as object representations."
msgstr ""
"Si *limit* es suministrado, solo esta cantidad de cuadros son tomados de "
"*frame_gen*. Si *lookup_lines* es ``False``, los objeto :class:"
"`FrameSummary` retornados aún no han leído sus líneas, lo que hace que el "
"costo de crear :class:`StackSummary` será más barato (lo que puede ser "
"valioso si no se formatea). Si *capture_locals* es ``True``, las variables "
"locales en cada :class:`FrameSummary` son capturadas como representaciones "
"de objetos."

#: ../Doc/library/traceback.rst:429
msgid ""
"Exceptions raised from :func:`repr` on a local variable (when "
"*capture_locals* is ``True``) are no longer propagated to the caller."
msgstr ""
"Las excepciones lanzadas desde :func:`repr` en una variable local (cuando "
"*capture_locals* es ``True``) no son propagadas al invocador."

#: ../Doc/library/traceback.rst:435
#, fuzzy
msgid ""
"Construct a :class:`!StackSummary` object from a supplied list of :class:"
"`FrameSummary` objects or old-style list of tuples.  Each tuple should be a "
"4-tuple with *filename*, *lineno*, *name*, *line* as the elements."
msgstr ""
"Construye un objeto :class:`StackSummary` desde una lista suministrada de "
"objetos :class:`FrameSummary` o una lista antigua de tuplas. Cada tupa debe "
"ser una 4-tupla con nombre de archivo, número de líneas, nombre, línea como "
"los elementos."

#: ../Doc/library/traceback.rst:442
#, fuzzy
msgid ""
"Returns a list of strings ready for printing.  Each string in the resulting "
"list corresponds to a single :ref:`frame <frame-objects>` from the stack. "
"Each string ends in a newline; the strings may contain internal newlines as "
"well, for those items with source text lines."
msgstr ""
"Retorna una lista de cadenas lista para mostrarse. Cada cadena en la lista "
"resultante corresponde a un único marco de la pila. Cada cadena termina en "
"una nueva línea;las cadenas también pueden contener nuevas líneas internas, "
"para aquellos elementos con líneas de texto fuente."

#: ../Doc/library/traceback.rst:448
msgid ""
"For long sequences of the same frame and line, the first few repetitions are "
"shown, followed by a summary line stating the exact number of further "
"repetitions."
msgstr ""
"Para secuencias largas del mismo marco y línea, se muestran las primeras "
"repeticiones, seguidas de una línea de resumen que indica el número exacto "
"de repeticiones adicionales."

#: ../Doc/library/traceback.rst:452
msgid "Long sequences of repeated frames are now abbreviated."
msgstr "Las secuencias largas de cuadros repetidos ahora se abrevian."

#: ../Doc/library/traceback.rst:457
#, fuzzy
msgid ""
"Returns a string for printing one of the :ref:`frames <frame-objects>` "
"involved in the stack. This method is called for each :class:`FrameSummary` "
"object to be printed by :meth:`StackSummary.format`. If it returns ``None``, "
"the frame is omitted from the output."
msgstr ""
"Retorna una cadena de texto para imprimir uno de los marcos implicados en la "
"pila. Este método lo llama cada objeto :class:`FrameSummary` para ser "
"imprimido por :meth:`StackSummary.format`. Si retorna ``None``, se omite el "
"marco del resultado."

#: ../Doc/library/traceback.rst:467
#, fuzzy
msgid ":class:`!FrameSummary` Objects"
msgstr "Objetos :class:`FrameSummary`"

#: ../Doc/library/traceback.rst:471
#, fuzzy
msgid ""
"A :class:`!FrameSummary` object represents a single :ref:`frame <frame-"
"objects>` in a :ref:`traceback <traceback-objects>`."
msgstr ""
"Los objetos :class:`FrameSummary` representan un único marco en el "
"seguimiento de pila."

#: ../Doc/library/traceback.rst:476
#, fuzzy
msgid ""
"Represents a single :ref:`frame <frame-objects>` in the :ref:`traceback "
"<traceback-objects>` or stack that is being formatted or printed. It may "
"optionally have a stringified version of the frame's locals included in it. "
"If *lookup_line* is ``False``, the source code is not looked up until the :"
"class:`!FrameSummary` has the :attr:`~FrameSummary.line` attribute accessed "
"(which also happens when casting it to a :class:`tuple`). :attr:"
"`~FrameSummary.line` may be directly provided, and will prevent line lookups "
"happening at all. *locals* is an optional local variable mapping, and if "
"supplied the variable representations are stored in the summary for later "
"display."
msgstr ""
"Representa un único marco en el seguimiento de pila o pila que es formateado "
"o mostrado. Opcionalmente, puede tener una versión en cadena de los marcos "
"locales incluidos en él. Si *lookup_line* es ``False``, el código fuente no "
"se busca hasta que :class:`FrameSummary` tenga el atributo :attr:"
"`~FrameSummary.line` accedido (lo que también sucede cuando lo conviertes en "
"una tupla). :attr:`~FrameSummary.line` puede proporcionarse directamente y "
"evitará que se realicen búsquedas de línea. *locals* es un diccionario de "
"variables locales opcional y, si se proporciona, las representaciones de "
"variables se almacenan en el resumen para su posterior visualización."

#: ../Doc/library/traceback.rst:487
msgid ":class:`!FrameSummary` instances have the following attributes:"
msgstr ""

#: ../Doc/library/traceback.rst:491
msgid ""
"The filename of the source code for this frame. Equivalent to accessing :"
"attr:`f.f_code.co_filename <codeobject.co_filename>` on a :ref:`frame object "
"<frame-objects>` *f*."
msgstr ""

#: ../Doc/library/traceback.rst:497
msgid "The line number of the source code for this frame."
msgstr ""

#: ../Doc/library/traceback.rst:501
msgid ""
"Equivalent to accessing :attr:`f.f_code.co_name <codeobject.co_name>` on a :"
"ref:`frame object <frame-objects>` *f*."
msgstr ""

#: ../Doc/library/traceback.rst:506
msgid ""
"A string representing the source code for this frame, with leading and "
"trailing whitespace stripped. If the source is not available, it is ``None``."
msgstr ""

#: ../Doc/library/traceback.rst:513
msgid "Traceback Examples"
msgstr "Ejemplos de seguimiento de pila"

#: ../Doc/library/traceback.rst:515
msgid ""
"This simple example implements a basic read-eval-print loop, similar to (but "
"less useful than) the standard Python interactive interpreter loop.  For a "
"more complete implementation of the interpreter loop, refer to the :mod:"
"`code` module. ::"
msgstr ""
"Este ejemplo sencillo implementa un bucle de lectura, evaluación e impresión "
"básico, similar a (pero menos útil) el bucle del intérprete interactivo "
"estándar de Python. Para una implementación más completa del bucle del "
"intérprete, ir al módulo :mod:`code` ::"

#: ../Doc/library/traceback.rst:520
msgid ""
"import sys, traceback\n"
"\n"
"def run_user_code(envdir):\n"
"    source = input(\">>> \")\n"
"    try:\n"
"        exec(source, envdir)\n"
"    except Exception:\n"
"        print(\"Exception in user code:\")\n"
"        print(\"-\"*60)\n"
"        traceback.print_exc(file=sys.stdout)\n"
"        print(\"-\"*60)\n"
"\n"
"envdir = {}\n"
"while True:\n"
"    run_user_code(envdir)"
msgstr ""

#: ../Doc/library/traceback.rst:537
msgid ""
"The following example demonstrates the different ways to print and format "
"the exception and traceback:"
msgstr ""
"El siguiente ejemplo demuestra las diferentes manera para mostrar y "
"formatear la excepción y el seguimiento de pila:"

#: ../Doc/library/traceback.rst:540
msgid ""
"import sys, traceback\n"
"\n"
"def lumberjack():\n"
"    bright_side_of_life()\n"
"\n"
"def bright_side_of_life():\n"
"    return tuple()[0]\n"
"\n"
"try:\n"
"    lumberjack()\n"
"except IndexError:\n"
"    exc = sys.exception()\n"
"    print(\"*** print_tb:\")\n"
"    traceback.print_tb(exc.__traceback__, limit=1, file=sys.stdout)\n"
"    print(\"*** print_exception:\")\n"
"    traceback.print_exception(exc, limit=2, file=sys.stdout)\n"
"    print(\"*** print_exc:\")\n"
"    traceback.print_exc(limit=2, file=sys.stdout)\n"
"    print(\"*** format_exc, first and last line:\")\n"
"    formatted_lines = traceback.format_exc().splitlines()\n"
"    print(formatted_lines[0])\n"
"    print(formatted_lines[-1])\n"
"    print(\"*** format_exception:\")\n"
"    print(repr(traceback.format_exception(exc)))\n"
"    print(\"*** extract_tb:\")\n"
"    print(repr(traceback.extract_tb(exc.__traceback__)))\n"
"    print(\"*** format_tb:\")\n"
"    print(repr(traceback.format_tb(exc.__traceback__)))\n"
"    print(\"*** tb_lineno:\", exc.__traceback__.tb_lineno)"
msgstr ""

#: ../Doc/library/traceback.rst:572
msgid "The output for the example would look similar to this:"
msgstr "La salida para el ejemplo podría ser similar a esto:"

#: ../Doc/library/traceback.rst:574
msgid ""
"*** print_tb:\n"
"  File \"<doctest...>\", line 10, in <module>\n"
"    lumberjack()\n"
"    ~~~~~~~~~~^^\n"
"*** print_exception:\n"
"Traceback (most recent call last):\n"
"  File \"<doctest...>\", line 10, in <module>\n"
"    lumberjack()\n"
"    ~~~~~~~~~~^^\n"
"  File \"<doctest...>\", line 4, in lumberjack\n"
"    bright_side_of_life()\n"
"    ~~~~~~~~~~~~~~~~~~~^^\n"
"IndexError: tuple index out of range\n"
"*** print_exc:\n"
"Traceback (most recent call last):\n"
"  File \"<doctest...>\", line 10, in <module>\n"
"    lumberjack()\n"
"    ~~~~~~~~~~^^\n"
"  File \"<doctest...>\", line 4, in lumberjack\n"
"    bright_side_of_life()\n"
"    ~~~~~~~~~~~~~~~~~~~^^\n"
"IndexError: tuple index out of range\n"
"*** format_exc, first and last line:\n"
"Traceback (most recent call last):\n"
"IndexError: tuple index out of range\n"
"*** format_exception:\n"
"['Traceback (most recent call last):\\n',\n"
" '  File \"<doctest default[0]>\", line 10, in <module>\\n    "
"lumberjack()\\n    ~~~~~~~~~~^^\\n',\n"
" '  File \"<doctest default[0]>\", line 4, in lumberjack\\n    "
"bright_side_of_life()\\n    ~~~~~~~~~~~~~~~~~~~^^\\n',\n"
" '  File \"<doctest default[0]>\", line 7, in bright_side_of_life\\n    "
"return tuple()[0]\\n           ~~~~~~~^^^\\n',\n"
" 'IndexError: tuple index out of range\\n']\n"
"*** extract_tb:\n"
"[<FrameSummary file <doctest...>, line 10 in <module>>,\n"
" <FrameSummary file <doctest...>, line 4 in lumberjack>,\n"
" <FrameSummary file <doctest...>, line 7 in bright_side_of_life>]\n"
"*** format_tb:\n"
"['  File \"<doctest default[0]>\", line 10, in <module>\\n    "
"lumberjack()\\n    ~~~~~~~~~~^^\\n',\n"
" '  File \"<doctest default[0]>\", line 4, in lumberjack\\n    "
"bright_side_of_life()\\n    ~~~~~~~~~~~~~~~~~~~^^\\n',\n"
" '  File \"<doctest default[0]>\", line 7, in bright_side_of_life\\n    "
"return tuple()[0]\\n           ~~~~~~~^^^\\n']\n"
"*** tb_lineno: 10"
msgstr ""

#: ../Doc/library/traceback.rst:619
msgid ""
"The following example shows the different ways to print and format the "
"stack::"
msgstr ""
"El siguiente ejemplo muestra las diferentes maneras de imprimir y formatear "
"la pila::"

#: ../Doc/library/traceback.rst:621
msgid ""
">>> import traceback\n"
">>> def another_function():\n"
"...     lumberstack()\n"
"...\n"
">>> def lumberstack():\n"
"...     traceback.print_stack()\n"
"...     print(repr(traceback.extract_stack()))\n"
"...     print(repr(traceback.format_stack()))\n"
"...\n"
">>> another_function()\n"
"  File \"<doctest>\", line 10, in <module>\n"
"    another_function()\n"
"  File \"<doctest>\", line 3, in another_function\n"
"    lumberstack()\n"
"  File \"<doctest>\", line 6, in lumberstack\n"
"    traceback.print_stack()\n"
"[('<doctest>', 10, '<module>', 'another_function()'),\n"
" ('<doctest>', 3, 'another_function', 'lumberstack()'),\n"
" ('<doctest>', 7, 'lumberstack', 'print(repr(traceback.extract_stack()))')]\n"
"['  File \"<doctest>\", line 10, in <module>\\n    another_function()\\n',\n"
" '  File \"<doctest>\", line 3, in another_function\\n    "
"lumberstack()\\n',\n"
" '  File \"<doctest>\", line 8, in lumberstack\\n    print(repr(traceback."
"format_stack()))\\n']"
msgstr ""

#: ../Doc/library/traceback.rst:645
msgid "This last example demonstrates the final few formatting functions:"
msgstr "Este último ejemplo demuestra las últimas funciones de formateo:"

#: ../Doc/library/traceback.rst:647
msgid ""
">>> import traceback\n"
">>> traceback.format_list([('spam.py', 3, '<module>', 'spam.eggs()'),\n"
"...                        ('eggs.py', 42, 'eggs', 'return \"bacon\"')])\n"
"['  File \"spam.py\", line 3, in <module>\\n    spam.eggs()\\n',\n"
" '  File \"eggs.py\", line 42, in eggs\\n    return \"bacon\"\\n']\n"
">>> an_error = IndexError('tuple index out of range')\n"
">>> traceback.format_exception_only(type(an_error), an_error)\n"
"['IndexError: tuple index out of range\\n']"
msgstr ""

#: ../Doc/library/traceback.rst:17
msgid "object"
msgstr "object"

#: ../Doc/library/traceback.rst:17
msgid "traceback"
msgstr "traceback"

#: ../Doc/library/traceback.rst:70
msgid "^ (caret)"
msgstr "^ (caret)"

#: ../Doc/library/traceback.rst:70
msgid "marker"
msgstr "marker"
