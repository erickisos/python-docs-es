# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-21 16:38-0300\n"
"PO-Revision-Date: 2021-08-04 12:39+0200\n"
"Last-Translator: Cristián Maureira-Fredes <cmaureirafredes@gmail.com>\n"
"Language: es_ES\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../Doc/library/array.rst:2
#, fuzzy
msgid ":mod:`!array` --- Efficient arrays of numeric values"
msgstr ":mod:`array` --- Arreglos eficientes de valores numéricos"

#: ../Doc/library/array.rst:11
#, fuzzy
msgid ""
"This module defines an object type which can compactly represent an array of "
"basic values: characters, integers, floating-point numbers.  Arrays are "
"sequence types and behave very much like lists, except that the type of "
"objects stored in them is constrained.  The type is specified at object "
"creation time by using a :dfn:`type code`, which is a single character.  The "
"following type codes are defined:"
msgstr ""
"Este modulo define un tipo de objeto que representa un arreglo de valores "
"básicos: caracteres, números enteros y de punto flotante. Los arreglos son "
"tipos de secuencias que se comportan de forma similar a las listas, a "
"excepción que el tipo de objeto guardado es definido. El tipo es "
"especificado al momento de crear el objeto mediante :dfn:`type code`, que es "
"un carácter simple. Se definen los siguientes tipos:"

#: ../Doc/library/array.rst:19
msgid "Type code"
msgstr "Código de tipo"

#: ../Doc/library/array.rst:19
msgid "C Type"
msgstr "Tipo C"

#: ../Doc/library/array.rst:19
msgid "Python Type"
msgstr "Tipo Python"

#: ../Doc/library/array.rst:19
msgid "Minimum size in bytes"
msgstr "Tamaño mínimo en bytes"

#: ../Doc/library/array.rst:19
msgid "Notes"
msgstr "Notas"

#: ../Doc/library/array.rst:21
msgid "``'b'``"
msgstr "``'b'``"

#: ../Doc/library/array.rst:21
msgid "signed char"
msgstr "signed char"

#: ../Doc/library/array.rst:21 ../Doc/library/array.rst:23
#: ../Doc/library/array.rst:29 ../Doc/library/array.rst:31
#: ../Doc/library/array.rst:33 ../Doc/library/array.rst:35
#: ../Doc/library/array.rst:37 ../Doc/library/array.rst:39
#: ../Doc/library/array.rst:41 ../Doc/library/array.rst:43
msgid "int"
msgstr "int"

#: ../Doc/library/array.rst:21 ../Doc/library/array.rst:23
msgid "1"
msgstr "1"

#: ../Doc/library/array.rst:23
msgid "``'B'``"
msgstr "``'B'``"

#: ../Doc/library/array.rst:23
msgid "unsigned char"
msgstr "unsigned char"

#: ../Doc/library/array.rst:25
msgid "``'u'``"
msgstr "``'u'``"

#: ../Doc/library/array.rst:25
msgid "wchar_t"
msgstr "wchar_t"

#: ../Doc/library/array.rst:25 ../Doc/library/array.rst:27
msgid "Unicode character"
msgstr "Carácter unicode"

#: ../Doc/library/array.rst:25 ../Doc/library/array.rst:29
#: ../Doc/library/array.rst:31 ../Doc/library/array.rst:33
#: ../Doc/library/array.rst:35
msgid "2"
msgstr "2"

#: ../Doc/library/array.rst:25
msgid "\\(1)"
msgstr "\\(1)"

#: ../Doc/library/array.rst:27
#, fuzzy
msgid "``'w'``"
msgstr "``'u'``"

#: ../Doc/library/array.rst:27
msgid "Py_UCS4"
msgstr ""

#: ../Doc/library/array.rst:27 ../Doc/library/array.rst:37
#: ../Doc/library/array.rst:39 ../Doc/library/array.rst:45
msgid "4"
msgstr "4"

#: ../Doc/library/array.rst:29
msgid "``'h'``"
msgstr "``'h'``"

#: ../Doc/library/array.rst:29
msgid "signed short"
msgstr "signed short"

#: ../Doc/library/array.rst:31
msgid "``'H'``"
msgstr "``'H'``"

#: ../Doc/library/array.rst:31
msgid "unsigned short"
msgstr "unsigned short"

#: ../Doc/library/array.rst:33
msgid "``'i'``"
msgstr "``'i'``"

#: ../Doc/library/array.rst:33
msgid "signed int"
msgstr "signed int"

#: ../Doc/library/array.rst:35
msgid "``'I'``"
msgstr "``'I'``"

#: ../Doc/library/array.rst:35
msgid "unsigned int"
msgstr "unsigned int"

#: ../Doc/library/array.rst:37
msgid "``'l'``"
msgstr "``'l'``"

#: ../Doc/library/array.rst:37
msgid "signed long"
msgstr "signed long"

#: ../Doc/library/array.rst:39
msgid "``'L'``"
msgstr "``'L'``"

#: ../Doc/library/array.rst:39
msgid "unsigned long"
msgstr "unsigned long"

#: ../Doc/library/array.rst:41
msgid "``'q'``"
msgstr "``'q'``"

#: ../Doc/library/array.rst:41
msgid "signed long long"
msgstr "signed long long"

#: ../Doc/library/array.rst:41 ../Doc/library/array.rst:43
#: ../Doc/library/array.rst:47
msgid "8"
msgstr "8"

#: ../Doc/library/array.rst:43
msgid "``'Q'``"
msgstr "``'Q'``"

#: ../Doc/library/array.rst:43
msgid "unsigned long long"
msgstr "unsigned long long"

#: ../Doc/library/array.rst:45
msgid "``'f'``"
msgstr "``'f'``"

#: ../Doc/library/array.rst:45 ../Doc/library/array.rst:47
msgid "float"
msgstr "float"

#: ../Doc/library/array.rst:47
msgid "``'d'``"
msgstr "``'d'``"

#: ../Doc/library/array.rst:47
msgid "double"
msgstr "double"

#: ../Doc/library/array.rst:50
msgid "Notes:"
msgstr "Notas:"

#: ../Doc/library/array.rst:53
msgid "It can be 16 bits or 32 bits depending on the platform."
msgstr "Puede ser de 16 bits o 32 bits según la plataforma."

#: ../Doc/library/array.rst:55
#, fuzzy
msgid ""
"``array('u')`` now uses :c:type:`wchar_t` as C type instead of deprecated "
"``Py_UNICODE``. This change doesn't affect its behavior because "
"``Py_UNICODE`` is alias of :c:type:`wchar_t` since Python 3.3."
msgstr ""
"``array('u')`` ahora usa ``wchar_t`` como tipo C en lugar de ``Py_UNICODE`` "
"obsoleto. Este cambio no afecta su comportamiento porque ``Py_UNICODE`` es "
"el alias de ``wchar_t`` desde Python 3.3."

#: ../Doc/library/array.rst:60
msgid "Please migrate to ``'w'`` typecode."
msgstr ""

#: ../Doc/library/array.rst:64
#, fuzzy
msgid ""
"The actual representation of values is determined by the machine "
"architecture (strictly speaking, by the C implementation).  The actual size "
"can be accessed through the :attr:`array.itemsize` attribute."
msgstr ""
"La representación real de los valores viene determinada por la arquitectura "
"de la maquina (estrictamente hablando, por la implementación de C). El "
"tamaño actual se puede obtener mediante el atributo :attr:`itemsize`."

#: ../Doc/library/array.rst:68
#, fuzzy
msgid "The module defines the following item:"
msgstr "El módulo define los siguientes tipos:"

#: ../Doc/library/array.rst:73
msgid "A string with all available type codes."
msgstr "Una cadena de caracteres con todos los códigos de tipos disponible."

#: ../Doc/library/array.rst:76
msgid "The module defines the following type:"
msgstr "El módulo define los siguientes tipos:"

#: ../Doc/library/array.rst:81
#, fuzzy
msgid ""
"A new array whose items are restricted by *typecode*, and initialized from "
"the optional *initializer* value, which must be a :class:`bytes` or :class:"
"`bytearray` object, a Unicode string, or iterable over elements of the "
"appropriate type."
msgstr ""
"Un nuevo arreglo cuyos elementos son restringidos por *typecode*, e "
"inicializados con el valor opcional *initializer*, el cual debe ser una "
"lista, un :term:`bytes-like object`, o un iterable sobre los elementos del "
"tipo apropiado."

#: ../Doc/library/array.rst:86
#, fuzzy
msgid ""
"If given a :class:`bytes` or :class:`bytearray` object, the initializer is "
"passed to the new array's :meth:`frombytes` method; if given a Unicode "
"string, the initializer is passed to the :meth:`fromunicode` method; "
"otherwise, the initializer's iterator is passed to the :meth:`extend` method "
"to add initial items to the array."
msgstr ""
"Si dada una lista o un string, el inicializador es pasado a los nuevos "
"métodos :meth:`fromlist`, :meth:`frombytes`, :meth:`fromunicode` del arreglo "
"(ver abajo) para añadir nuevos elementos al arreglo. De forma contraria, el "
"iterable inicializador se pasa al método :meth:`extend`."

#: ../Doc/library/array.rst:93
msgid ""
"Array objects support the ordinary sequence operations of indexing, slicing, "
"concatenation, and multiplication.  When using slice assignment, the "
"assigned value must be an array object with the same type code; in all other "
"cases, :exc:`TypeError` is raised. Array objects also implement the buffer "
"interface, and may be used wherever :term:`bytes-like objects <bytes-like "
"object>` are supported."
msgstr ""
"Los objetos tipo arreglo soportan operaciones de secuencia ordinarias de "
"indexación, segmentación, concatenación y multiplicación . Cuando se utiliza "
"segmentación, el valor asignado debe ser un arreglo con el mismo código de "
"tipo, en todos los otros casos se lanza :exc:`TypeError`. Los arreglos "
"también implementan una interfaz de buffer, y puede ser utilizada en "
"cualquier momento cuando los objetos :term:`bytes-like objects <bytes-like "
"object>` son soportados."

#: ../Doc/library/array.rst:99
msgid ""
"Raises an :ref:`auditing event <auditing>` ``array.__new__`` with arguments "
"``typecode``, ``initializer``."
msgstr ""
"Lanza un :ref:`evento de auditoría <auditing>` ``array.__new__`` con "
"argumentos ``typecode``, ``initializer``."

#: ../Doc/library/array.rst:104
msgid "The typecode character used to create the array."
msgstr "El carácter typecode utilizado para crear el arreglo."

#: ../Doc/library/array.rst:109
msgid "The length in bytes of one array item in the internal representation."
msgstr ""
"La longitud en bytes de un elemento del arreglo en su representación interna."

#: ../Doc/library/array.rst:114
msgid "Append a new item with value *x* to the end of the array."
msgstr "Añade un nuevo elemento con valor *x* al final del arreglo."

#: ../Doc/library/array.rst:119
#, fuzzy
msgid ""
"Return a tuple ``(address, length)`` giving the current memory address and "
"the length in elements of the buffer used to hold array's contents.  The "
"size of the memory buffer in bytes can be computed as ``array.buffer_info()"
"[1] * array.itemsize``.  This is occasionally useful when working with low-"
"level (and inherently unsafe) I/O interfaces that require memory addresses, "
"such as certain :c:func:`!ioctl` operations.  The returned numbers are valid "
"as long as the array exists and no length-changing operations are applied to "
"it."
msgstr ""
"Retorna una tupla ``(address, length)`` con la dirección de memoria actual y "
"la longitud de los elementos en el buffer utilizado para almacenar "
"temporalmente los elementos del arreglo. El tamaño del buffer de memoria es "
"calculado como ``array.buffer_info()[1] * array.itemsize``. Ocasionalmente "
"es practico cuando trabajamos en interfaces E/S de bajo nivel (de manera "
"inherentemente insegura) que requieren direcciones de memoria, por ejemplo "
"ciertas operaciones :c:func:`ioctl`. Los números retornados son válidos "
"mientras el arreglo exista y no se cambie la longitud del mismo."

#: ../Doc/library/array.rst:129
msgid ""
"When using array objects from code written in C or C++ (the only way to "
"effectively make use of this information), it makes more sense to use the "
"buffer interface supported by array objects.  This method is maintained for "
"backward compatibility and should be avoided in new code.  The buffer "
"interface is documented in :ref:`bufferobjects`."
msgstr ""
"Cuando utilizamos objetos tipo arreglo escritos en C o C++ (la única manera "
"de utilizar esta información de forma más efectiva), tiene más sentido "
"utilizar interfaces buffer que soporten objetos del tipo arreglo. Este "
"método es mantenido con retro compatibilidad y tiene que ser evitado en el "
"nuevo código. Las interfaces de buffer son documentadas en :ref:"
"`bufferobjects`."

#: ../Doc/library/array.rst:138
msgid ""
"\"Byteswap\" all items of the array.  This is only supported for values "
"which are 1, 2, 4, or 8 bytes in size; for other types of values, :exc:"
"`RuntimeError` is raised.  It is useful when reading data from a file "
"written on a machine with a different byte order."
msgstr ""
"\"Byteswap\" todos los elementos del arreglo. Solo es soportado para valores "
"de tamaño 1,2,3,4 o 8 bytes; para otros valores se lanza :exc:"
"`RuntimeError`. Es útil cuando leemos información de un fichero en una "
"máquina con diferente orden de bytes."

#: ../Doc/library/array.rst:146
msgid "Return the number of occurrences of *x* in the array."
msgstr "Retorna el número de ocurrencias de *x* en el arreglo."

#: ../Doc/library/array.rst:151
msgid ""
"Append items from *iterable* to the end of the array.  If *iterable* is "
"another array, it must have *exactly* the same type code; if not, :exc:"
"`TypeError` will be raised.  If *iterable* is not an array, it must be "
"iterable and its elements must be the right type to be appended to the array."
msgstr ""
"Añade los elementos del *iterable* al final del arreglo. Si el *iterable* es "
"de otro arreglo, este debe ser *exactamente* del mismo tipo; si no, se "
"lanza :exc:`TypeError`. Si el *iterable* no es un arreglo, este debe de ser "
"un iterable y sus elementos deben ser del tipo correcto para ser añadidos al "
"arreglo."

#: ../Doc/library/array.rst:159
#, fuzzy
msgid ""
"Appends items from the :term:`bytes-like object`, interpreting its content "
"as an array of machine values (as if it had been read from a file using the :"
"meth:`fromfile` method)."
msgstr ""
"Añade los elementos de la cadena de texto, interpretando la cadena de texto "
"como un arreglo de valores máquina (como si se leyera de un fichero "
"utilizando el método :meth:`fromfile`)."

#: ../Doc/library/array.rst:163
#, fuzzy
msgid ":meth:`!fromstring` is renamed to :meth:`frombytes` for clarity."
msgstr ":meth:`fromstring` se renombra como :meth:`frombytes` por claridad."

#: ../Doc/library/array.rst:169
msgid ""
"Read *n* items (as machine values) from the :term:`file object` *f* and "
"append them to the end of the array.  If less than *n* items are available, :"
"exc:`EOFError` is raised, but the items that were available are still "
"inserted into the array."
msgstr ""
"Lee *n* elementos (como valores de máquina) del :term:`file object` *f* y "
"los añade al final del arreglo. Si hay menos de *n* elementos disponibles, "
"se lanza :exc:`EOFError`, pero los elementos que estaban disponibles todavía "
"se insertan en el arreglo."

#: ../Doc/library/array.rst:177
msgid ""
"Append items from the list.  This is equivalent to ``for x in list: a."
"append(x)`` except that if there is a type error, the array is unchanged."
msgstr ""
"Añade los elementos de la lista. Es equivalente a ``for x in list: a."
"append(x)`` excepto que si hay un error de tipo, el arreglo no se modifica."

#: ../Doc/library/array.rst:183
#, fuzzy
msgid ""
"Extends this array with data from the given Unicode string. The array must "
"have type code ``'u'`` or ``'w'``; otherwise a :exc:`ValueError` is raised. "
"Use ``array.frombytes(unicodestring.encode(enc))`` to append Unicode data to "
"an array of some other type."
msgstr ""
"Extiende este arreglo con datos de la cadena de texto unicode. El arreglo "
"debe ser un arreglo tipo ``'u'``; de forma contraria se lanza :exc:"
"`ValueError`. Utiliza ``array.frombytes(unicodestring.encode(enc))`` para "
"añadir datos Unicode a un arreglo de algún otro tipo."

#: ../Doc/library/array.rst:191
msgid ""
"Return the smallest *i* such that *i* is the index of the first occurrence "
"of *x* in the array.  The optional arguments *start* and *stop* can be "
"specified to search for *x* within a subsection of the array.  Raise :exc:"
"`ValueError` if *x* is not found."
msgstr ""
"Retorna el *i* más pequeño de modo que *i* es el índice de la primera "
"aparición de *x* en el arreglo. Los argumentos opcionales *start* y *stop* "
"pueden ser especificados para buscar *x* dentro de una subsección del "
"arreglo. Lanza :exc:`ValueError` si no se encuentra *x*."

#: ../Doc/library/array.rst:196
msgid "Added optional *start* and *stop* parameters."
msgstr "Se agregaron parámetros opcionales *start* y *stop*."

#: ../Doc/library/array.rst:202
msgid ""
"Insert a new item with value *x* in the array before position *i*. Negative "
"values are treated as being relative to the end of the array."
msgstr ""
"Inserta un nuevo elemento con valor *x* en el arreglo antes de la posición "
"*i*. Si hay valores negativos son tratados como relativos a la posición "
"final del arreglo."

#: ../Doc/library/array.rst:208
msgid ""
"Removes the item with the index *i* from the array and returns it. The "
"optional argument defaults to ``-1``, so that by default the last item is "
"removed and returned."
msgstr ""
"Elimina el elemento con índice *i* del arreglo y lo retorna. El argumento "
"opcional por defecto es ``-1``, en caso de utilizar el argumento por defecto "
"el ultimo elemento es eliminado y retornado."

#: ../Doc/library/array.rst:215
msgid "Remove the first occurrence of *x* from the array."
msgstr "Elimina la primera ocurrencia de *x* del arreglo."

#: ../Doc/library/array.rst:220
#, fuzzy
msgid "Remove all elements from the array."
msgstr "Elimina la primera ocurrencia de *x* del arreglo."

#: ../Doc/library/array.rst:227
msgid "Reverse the order of the items in the array."
msgstr "Invierte el orden de los elementos en el arreglo."

#: ../Doc/library/array.rst:232
msgid ""
"Convert the array to an array of machine values and return the bytes "
"representation (the same sequence of bytes that would be written to a file "
"by the :meth:`tofile` method.)"
msgstr ""
"Convierte el arreglo en un arreglo de valores máquina y retorna una "
"representación en formato de bytes (la misma secuencia de bytes que se deben "
"escribir en un fichero por el método :meth:`tofile`.)"

#: ../Doc/library/array.rst:236
#, fuzzy
msgid ":meth:`!tostring` is renamed to :meth:`tobytes` for clarity."
msgstr ":meth:`tostring` se renombra como :meth:`tobytes` para claridad."

#: ../Doc/library/array.rst:242
msgid "Write all items (as machine values) to the :term:`file object` *f*."
msgstr ""
"Escribe todos los elementos (incluido elementos máquina) a el :term:`file "
"object` *f*."

#: ../Doc/library/array.rst:247
msgid "Convert the array to an ordinary list with the same items."
msgstr "Convierte el arreglo a una lista ordinaria con los mismos elementos."

#: ../Doc/library/array.rst:252
#, fuzzy
msgid ""
"Convert the array to a Unicode string.  The array must have a type ``'u'`` "
"or ``'w'``; otherwise a :exc:`ValueError` is raised. Use ``array.tobytes()."
"decode(enc)`` to obtain a Unicode string from an array of some other type."
msgstr ""
"Convierte el arreglo a una cadena de texto unicode. El arreglo debe ser un "
"arreglo tipo ``'u'`` ; en caso contrario se lanza :exc:`ValueError`. Utiliza "
"``array.tobytes().decode(enc)`` para obtener una cadena de texto unicode de "
"un arreglo de algún otro tipo."

#: ../Doc/library/array.rst:257
#, fuzzy
msgid ""
"The string representation of array objects has the form ``array(typecode, "
"initializer)``. The *initializer* is omitted if the array is empty, "
"otherwise it is a Unicode string if the *typecode* is ``'u'`` or ``'w'``, "
"otherwise it is a list of numbers. The string representation is guaranteed "
"to be able to be converted back to an array with the same type and value "
"using :func:`eval`, so long as the :class:`~array.array` class has been "
"imported using ``from array import array``. Variables ``inf`` and ``nan`` "
"must also be defined if it contains corresponding floating-point values. "
"Examples::"
msgstr ""
"Cuando un objeto se imprime o se convierte a una cadena de texto, este se "
"representa como ``array(typecode, initializer)``. El *initializer* se omite "
"cuando el arreglo está vacío, de forma contraria es una cadena de caracteres "
"si su *typecode* es ``'u'``, de lo contrario es una lista de números. La "
"cadena de caracteres garantiza que es capaz de ser convertida de nuevo a un "
"arreglo con el mismo tipo y valor utilizando :func:`eval`, hasta que la "
"clase :class:`~array.array` ha sido importada utilizando ``from array import "
"array``. Ejemplos::"

#: ../Doc/library/array.rst:269
msgid ""
"array('l')\n"
"array('w', 'hello \\u2641')\n"
"array('l', [1, 2, 3, 4, 5])\n"
"array('d', [1.0, 2.0, 3.14, -inf, nan])"
msgstr ""

#: ../Doc/library/array.rst:278
msgid "Module :mod:`struct`"
msgstr "Módulo :mod:`struct`"

#: ../Doc/library/array.rst:278
msgid "Packing and unpacking of heterogeneous binary data."
msgstr "Empaquetado y desempaquetado de datos binarios heterogéneos."

#: ../Doc/library/array.rst:280
msgid "`NumPy <https://numpy.org/>`_"
msgstr "`NumPy <https://numpy.org/>`_"

#: ../Doc/library/array.rst:281
msgid "The NumPy package defines another array type."
msgstr "El paquete NumPy define otro tipo de arreglo."

#: ../Doc/library/array.rst:7
msgid "arrays"
msgstr ""
