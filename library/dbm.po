# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to
# get the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-21 16:38-0300\n"
"PO-Revision-Date: 2024-10-27 18:46-0400\n"
"Last-Translator: Alfonso Areiza Guerra <alfareiza@gmail.com>\n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../Doc/library/dbm.rst:2
#, fuzzy
msgid ":mod:`!dbm` --- Interfaces to Unix \"databases\""
msgstr ":mod:`dbm` --- Interfaces para \"bases de datos\" de Unix"

#: ../Doc/library/dbm.rst:7
msgid "**Source code:** :source:`Lib/dbm/__init__.py`"
msgstr "**Código fuente:** :source:`Lib/dbm/__init__.py`"

#: ../Doc/library/dbm.rst:11
#, fuzzy
msgid ":mod:`dbm` is a generic interface to variants of the DBM database:"
msgstr ":mod:`dbm` --- Interfaces para \"bases de datos\" de Unix"

#: ../Doc/library/dbm.rst:13
msgid ":mod:`dbm.sqlite3`"
msgstr ""

#: ../Doc/library/dbm.rst:14
msgid ":mod:`dbm.gnu`"
msgstr ""

#: ../Doc/library/dbm.rst:15
msgid ":mod:`dbm.ndbm`"
msgstr ""

#: ../Doc/library/dbm.rst:17
#, fuzzy
msgid ""
"If none of these modules are installed, the slow-but-simple implementation "
"in module :mod:`dbm.dumb` will be used.  There is a `third party interface "
"<https://www.jcea.es/programacion/pybsddb.htm>`_ to the Oracle Berkeley DB."
msgstr ""
":mod:`dbm` es una interfaz genérica para variantes de la base de datos DBM "
"— :mod:`dbm.gnu` o :mod:`dbm.ndbm`. Si ninguno de estos módulos son "
"instalados, se utilizará la implementación lenta pero sencilla en el módulo :"
"mod:`dbm.dumb`. Existe una `interfaz de terceros <https://www.jcea.es/"
"programacion/pybsddb.htm>`_ para la Oracle Berkeley DB."

#: ../Doc/library/dbm.rst:24
msgid ""
"A tuple containing the exceptions that can be raised by each of the "
"supported modules, with a unique exception also named :exc:`dbm.error` as "
"the first item --- the latter is used when :exc:`dbm.error` is raised."
msgstr ""
"Una tupla que contiene las excepciones que pueden ser lanzadas por cada uno "
"de los módulos soportados, con una excepción única también denominada :exc:"
"`dbm.error` como el primer elemento — el último se usa cuando se genera :exc:"
"`dbm.error`."

#: ../Doc/library/dbm.rst:31
#, fuzzy
msgid ""
"This function attempts to guess which of the several simple database modules "
"available --- :mod:`dbm.sqlite3`, :mod:`dbm.gnu`, :mod:`dbm.ndbm`, or :mod:"
"`dbm.dumb` --- should be used to open a given file."
msgstr ""
"Esta función intenta adivinar cuál de los varios módulos de base de datos "
"simples disponibles --- :mod:`dbm.gnu`, :mod:`dbm.ndbm` o :mod:`dbm.dumb` "
"--- deberán usarse para abrir un archivo."

#: ../Doc/library/dbm.rst:35
msgid "Return one of the following values:"
msgstr ""

#: ../Doc/library/dbm.rst:37
msgid ""
"``None`` if the file can't be opened because it's unreadable or doesn't exist"
msgstr ""

#: ../Doc/library/dbm.rst:38
msgid "the empty string (``''``) if the file's format can't be guessed"
msgstr ""

#: ../Doc/library/dbm.rst:39
msgid ""
"a string containing the required module name, such as ``'dbm.ndbm'`` or "
"``'dbm.gnu'``"
msgstr ""

#: ../Doc/library/dbm.rst:41 ../Doc/library/dbm.rst:250
#: ../Doc/library/dbm.rst:448
#, fuzzy
msgid "*filename* accepts a :term:`path-like object`."
msgstr "Acepta :term:`path-like object` como nombre de archivo."

#: ../Doc/library/dbm.rst:65
#, fuzzy
msgid "Open a database and return the corresponding database object."
msgstr ""
"Abre el archivo *file* de la base de datos y retorna un objeto "
"correspondiente."

#: ../Doc/library/dbm.rst
msgid "Parameters"
msgstr ""

#: ../Doc/library/dbm.rst:67
#, fuzzy
msgid ""
"The database file to open.  If the database file already exists, the :func:"
"`whichdb` function is used to determine its type and the appropriate module "
"is used; if it does not exist, the first submodule listed above that can be "
"imported is used."
msgstr ""
"Si el archivo de la base de datos existe, la función :func:`whichdb` es "
"usada para determinar su tipo y el módulo apropiado se utiliza; sino existe, "
"se utiliza el primer módulo listado anteriormente que se puede importar."

#: ../Doc/library/dbm.rst:68 ../Doc/library/dbm.rst:222
msgid "The database file to open."
msgstr ""

#: ../Doc/library/dbm.rst:70
#, fuzzy
msgid ""
"If the database file already exists, the :func:`whichdb` function is used to "
"determine its type and the appropriate module is used; if it does not exist, "
"the first submodule listed above that can be imported is used."
msgstr ""
"Si el archivo de la base de datos existe, la función :func:`whichdb` es "
"usada para determinar su tipo y el módulo apropiado se utiliza; sino existe, "
"se utiliza el primer módulo listado anteriormente que se puede importar."

#: ../Doc/library/dbm.rst:75 ../Doc/library/dbm.rst:178
#: ../Doc/library/dbm.rst:353
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""

#: ../Doc/library/dbm.rst:76 ../Doc/library/dbm.rst:180
#: ../Doc/library/dbm.rst:227 ../Doc/library/dbm.rst:354
msgid "``'r'`` (default): |flag_r|"
msgstr ""

#: ../Doc/library/dbm.rst:77 ../Doc/library/dbm.rst:181
#: ../Doc/library/dbm.rst:228 ../Doc/library/dbm.rst:355
#: ../Doc/library/dbm.rst:429
msgid "``'w'``: |flag_w|"
msgstr ""

#: ../Doc/library/dbm.rst:78 ../Doc/library/dbm.rst:182
#: ../Doc/library/dbm.rst:229 ../Doc/library/dbm.rst:356
msgid "``'c'``: |flag_c|"
msgstr ""

#: ../Doc/library/dbm.rst:79 ../Doc/library/dbm.rst:183
#: ../Doc/library/dbm.rst:230 ../Doc/library/dbm.rst:357
#: ../Doc/library/dbm.rst:431
msgid "``'n'``: |flag_n|"
msgstr ""

#: ../Doc/library/dbm.rst:81 ../Doc/library/dbm.rst:244
#: ../Doc/library/dbm.rst:359 ../Doc/library/dbm.rst:433
msgid "|mode_param_doc|"
msgstr ""

#: ../Doc/library/dbm.rst:84
#, fuzzy
msgid "*file* accepts a :term:`path-like object`."
msgstr "Acepta :term:`path-like object` como nombre de archivo."

#: ../Doc/library/dbm.rst:87
#, fuzzy
msgid ""
"The object returned by :func:`~dbm.open` supports the same basic "
"functionality as a :class:`dict`; keys and their corresponding values can be "
"stored, retrieved, and deleted, and the :keyword:`in` operator and the :meth:"
"`!keys` method are available, as well as :meth:`!get` and :meth:`!"
"setdefault` methods."
msgstr ""
"El objeto retornado por :func:`.open` admite la misma funcionalidad básica "
"que los diccionarios; las claves y sus valores correspondientes se pueden "
"almacenar, recuperar y eliminar, y el operador :keyword:`in` y el método :"
"meth:`keys` están disponibles, así como :meth:`get` y :meth:`setdefault`."

#: ../Doc/library/dbm.rst:92
#, fuzzy
msgid ""
"Key and values are always stored as :class:`bytes`. This means that when "
"strings are used they are implicitly converted to the default encoding "
"before being stored."
msgstr ""
"La clave y los valores siempre se almacenan como bytes. Esto significa que "
"cuando se utilizan cadenas de caracteres, se convierten implícitamente a la "
"codificación predeterminada antes de almacenarse."

#: ../Doc/library/dbm.rst:96
msgid ""
"These objects also support being used in a :keyword:`with` statement, which "
"will automatically close them when done."
msgstr ""
"Estos objetos también admiten el uso en una instrucción :keyword:`with`, que "
"los cerrará automáticamente cuando termine."

#: ../Doc/library/dbm.rst:99
#, fuzzy
msgid ""
":meth:`!get` and :meth:`!setdefault` methods are now available for all :mod:"
"`dbm` backends."
msgstr ""
":meth:`get` y :meth:`setdefault` ya están disponibles en todos los módulos "
"de base de datos."

#: ../Doc/library/dbm.rst:103
#, fuzzy
msgid ""
"Added native support for the context management protocol to the objects "
"returned by :func:`~dbm.open`."
msgstr ""
"Se agregó soporte nativo para el protocolo de administración de contexto a "
"los objetos retornados por :func:`.open`."

#: ../Doc/library/dbm.rst:107
#, fuzzy
msgid ""
"Deleting a key from a read-only database raises a database module specific "
"exception instead of :exc:`KeyError`."
msgstr ""
"Al eliminar una clave de una base de datos de solo lectura lanza un error "
"específico del módulo de la base de datos en lugar de :exc:`KeyError`."

#: ../Doc/library/dbm.rst:111
msgid ""
"The following example records some hostnames and a corresponding title,  and "
"then prints out the contents of the database::"
msgstr ""
"El siguiente ejemplo registra algunos nombres de host y un título "
"correspondiente, y luego imprime el contenido de la base de datos::"

#: ../Doc/library/dbm.rst:114
msgid ""
"import dbm\n"
"\n"
"# Open database, creating it if necessary.\n"
"with dbm.open('cache', 'c') as db:\n"
"\n"
"    # Record some values\n"
"    db[b'hello'] = b'there'\n"
"    db['www.python.org'] = 'Python Website'\n"
"    db['www.cnn.com'] = 'Cable News Network'\n"
"\n"
"    # Note that the keys are considered bytes now.\n"
"    assert db[b'www.python.org'] == b'Python Website'\n"
"    # Notice how the value is now in bytes.\n"
"    assert db['www.cnn.com'] == b'Cable News Network'\n"
"\n"
"    # Often-used methods of the dict interface work too.\n"
"    print(db.get('python.org', b'not present'))\n"
"\n"
"    # Storing a non-string key or value will raise an exception (most\n"
"    # likely a TypeError).\n"
"    db['www.yahoo.com'] = 4\n"
"\n"
"# db is automatically closed when leaving the with statement."
msgstr ""

#: ../Doc/library/dbm.rst:141
msgid "Module :mod:`shelve`"
msgstr "Módulo :mod:`shelve`"

#: ../Doc/library/dbm.rst:142
msgid "Persistence module which stores non-string data."
msgstr ""
"Módulo de persistencia que almacena datos que no son cadenas de caracteres."

#: ../Doc/library/dbm.rst:145
msgid "The individual submodules are described in the following sections."
msgstr "Los submódulos individuales se describen en las siguientes secciones."

#: ../Doc/library/dbm.rst:148
#, fuzzy
msgid ":mod:`dbm.sqlite3` --- SQLite backend for dbm"
msgstr ":mod:`dbm.ndbm` --- Interfaz basada en ndbm"

#: ../Doc/library/dbm.rst:156
#, fuzzy
msgid "**Source code:** :source:`Lib/dbm/sqlite3.py`"
msgstr "**Código fuente:** :source:`Lib/dbm/gnu.py`"

#: ../Doc/library/dbm.rst:160
msgid ""
"This module uses the standard library :mod:`sqlite3` module to provide an "
"SQLite backend for the :mod:`dbm` module. The files created by :mod:`dbm."
"sqlite3` can thus be opened by :mod:`sqlite3`, or any other SQLite browser, "
"including the SQLite CLI."
msgstr ""

#: ../Doc/includes/wasm-notavail.rst:3
msgid ":ref:`Availability <availability>`: not WASI."
msgstr ""

#: ../Doc/includes/wasm-notavail.rst:5
msgid ""
"This module does not work or is not available on WebAssembly. See :ref:`wasm-"
"availability` for more information."
msgstr ""

#: ../Doc/library/dbm.rst:169
msgid ""
"Open an SQLite database. The returned object behaves like a :term:`mapping`, "
"implements a :meth:`!close` method, and supports a \"closing\" context "
"manager via the :keyword:`with` keyword."
msgstr ""

#: ../Doc/library/dbm.rst:174
msgid "The path to the database to be opened."
msgstr ""

#: ../Doc/library/dbm.rst:185
msgid ""
"The Unix file access mode of the file (default: octal ``0o666``), used only "
"when the database has to be created."
msgstr ""

#: ../Doc/library/dbm.rst:191
#, fuzzy
msgid ":mod:`dbm.gnu` --- GNU database manager"
msgstr ":mod:`dbm.ndbm` --- Interfaz basada en ndbm"

#: ../Doc/library/dbm.rst:197
msgid "**Source code:** :source:`Lib/dbm/gnu.py`"
msgstr "**Código fuente:** :source:`Lib/dbm/gnu.py`"

#: ../Doc/library/dbm.rst:201
msgid ""
"The :mod:`dbm.gnu` module provides an interface to the :abbr:`GDBM (GNU "
"dbm)` library, similar to the :mod:`dbm.ndbm` module, but with additional "
"functionality like crash tolerance."
msgstr ""

#: ../Doc/library/dbm.rst:207 ../Doc/library/dbm.rst:321
msgid ""
"The file formats created by :mod:`dbm.gnu` and :mod:`dbm.ndbm` are "
"incompatible and can not be used interchangeably."
msgstr ""

#: ../Doc/includes/wasm-mobile-notavail.rst:3
msgid ":ref:`Availability <availability>`: not Android, not iOS, not WASI."
msgstr ""

#: ../Doc/includes/wasm-mobile-notavail.rst:5
msgid ""
"This module is not supported on :ref:`mobile platforms <mobile-"
"availability>` or :ref:`WebAssembly platforms <wasm-availability>`."
msgstr ""

#: ../Doc/library/dbm.rst:214
msgid ""
"Raised on :mod:`dbm.gnu`-specific errors, such as I/O errors. :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"Se lanza en errores específicos :mod:`dbm.gnu`, como errores de E/S. :exc:"
"`KeyError` se genera para errores generales de asignación, como especificar "
"una clave incorrecta."

#: ../Doc/library/dbm.rst:220
#, fuzzy
msgid "Open a GDBM database and return a :class:`!gdbm` object."
msgstr ""
"Abre el archivo *file* de la base de datos y retorna un objeto "
"correspondiente."

#: ../Doc/library/dbm.rst:226
msgid ""
"* ``'r'`` (default): |flag_r| * ``'w'``: |flag_w| * ``'c'``: |flag_c| * "
"``'n'``: |flag_n|  The following additional characters may be appended to "
"control how the database is opened:  * ``'f'``: Open the database in fast "
"mode.   Writes to the database will not be synchronized. * ``'s'``: "
"Synchronized mode.   Changes to the database will be written immediately to "
"the file. * ``'u'``: Do not lock database.  Not all flags are valid for all "
"versions of GDBM. See the :data:`open_flags` member for a list of supported "
"flag characters."
msgstr ""

#: ../Doc/library/dbm.rst:232
#, fuzzy
msgid ""
"The following additional characters may be appended to control how the "
"database is opened:"
msgstr ""
"Los siguientes caracteres adicionales se pueden agregar al flag para "
"controlar cómo se abre la base de datos:"

#: ../Doc/library/dbm.rst:235
#, fuzzy
msgid ""
"``'f'``: Open the database in fast mode. Writes to the database will not be "
"synchronized."
msgstr ""
"Abre la base de datos en modo rápido. Las escrituras en la base de datos no "
"se sincronizarán."

#: ../Doc/library/dbm.rst:237
#, fuzzy
msgid ""
"``'s'``: Synchronized mode. Changes to the database will be written "
"immediately to the file."
msgstr ""
"Modo sincronizado. Esto hará que los cambios en la base de datos se escriban "
"inmediatamente en el archivo."

#: ../Doc/library/dbm.rst:239
#, fuzzy
msgid "``'u'``: Do not lock database."
msgstr "No bloquea la base de datos."

#: ../Doc/library/dbm.rst:241
#, fuzzy
msgid ""
"Not all flags are valid for all versions of GDBM. See the :data:`open_flags` "
"member for a list of supported flag characters."
msgstr ""
"No todos los flags son válidas para todas las versiones de ``gdbm``. La "
"constante del módulo :const:`open_flags` es una cadena de caracteres de "
"flags soportadas. La excepción :exc:`error` se lanza si se especifica un "
"flag no válido."

#: ../Doc/library/dbm.rst
msgid "Raises"
msgstr ""

#: ../Doc/library/dbm.rst:247
#, fuzzy
msgid "If an invalid *flag* argument is passed."
msgstr "El argumento opcional *flag* puede ser:"

#: ../Doc/library/dbm.rst:255
msgid ""
"A string of characters the *flag* parameter of :meth:`~dbm.gnu.open` "
"supports."
msgstr ""

#: ../Doc/library/dbm.rst:257
msgid ""
":class:`!gdbm` objects behave similar to :term:`mappings <mapping>`, but :"
"meth:`!items` and :meth:`!values` methods are not supported. The following "
"methods are also provided:"
msgstr ""

#: ../Doc/library/dbm.rst:263
#, fuzzy
msgid ""
"It's possible to loop over every key in the database using this method  and "
"the :meth:`nextkey` method.  The traversal is ordered by GDBM's internal "
"hash values, and won't be sorted by the key values.  This method returns the "
"starting key."
msgstr ""
"Es posible recorrer cada clave en la base de datos usando este método y el "
"método :meth:`nextkey`. El recorrido está ordenado por los valores hash "
"internos de ``gdbm`` y no se ordenará por los valores clave. Este método "
"retorna la clave de inicio."

#: ../Doc/library/dbm.rst:270
msgid ""
"Returns the key that follows *key* in the traversal.  The following code "
"prints every key in the database ``db``, without having to create a list in "
"memory that contains them all::"
msgstr ""
"Retorna la clave que sigue a *key* en el recorrido. El siguiente código "
"imprime todas las claves en la base de datos ``db``, sin tener que crear una "
"lista en la memoria que las contenga todas::"

#: ../Doc/library/dbm.rst:274
msgid ""
"k = db.firstkey()\n"
"while k is not None:\n"
"    print(k)\n"
"    k = db.nextkey(k)"
msgstr ""

#: ../Doc/library/dbm.rst:281
#, fuzzy
msgid ""
"If you have carried out a lot of deletions and would like to shrink the "
"space used by the GDBM file, this routine will reorganize the database.  :"
"class:`!gdbm` objects will not shorten the length of a database file except "
"by using this reorganization; otherwise, deleted file space will be kept and "
"reused as new (key, value) pairs are added."
msgstr ""
"Si ha realizado muchas eliminaciones y desea reducir el espacio utilizado "
"por el archivo ``gdbm``, esta rutina reorganizará la base de datos. Los "
"objetos ``gdbm`` no acortarán la longitud de un archivo de base de datos "
"excepto al usar esta reorganización; de lo contrario, el espacio de archivo "
"eliminado se conservará y reutilizará cuando se agreguen nuevos pares "
"(clave, valor)."

#: ../Doc/library/dbm.rst:289
msgid ""
"When the database has been opened in fast mode, this method forces any "
"unwritten data to be written to the disk."
msgstr ""
"Cuando la base de datos se ha abierto en modo rápido, este método obliga a "
"que los datos no escritos se escriban en el disco."

#: ../Doc/library/dbm.rst:294
#, fuzzy
msgid "Close the GDBM database."
msgstr "Cierra la base de datos ``gdbm``."

#: ../Doc/library/dbm.rst:298
#, fuzzy
msgid "Remove all items from the GDBM database."
msgstr "Cierra la base de datos ``gdbm``."

#: ../Doc/library/dbm.rst:304
#, fuzzy
msgid ":mod:`dbm.ndbm` --- New Database Manager"
msgstr ":mod:`dbm.ndbm` --- Interfaz basada en ndbm"

#: ../Doc/library/dbm.rst:310
msgid "**Source code:** :source:`Lib/dbm/ndbm.py`"
msgstr "**Código fuente:** :source:`Lib/dbm/ndbm.py`"

#: ../Doc/library/dbm.rst:314
msgid ""
"The :mod:`dbm.ndbm` module provides an interface to the :abbr:`NDBM (New "
"Database Manager)` library. This module can be used with the \"classic\" "
"NDBM interface or the :abbr:`GDBM (GNU dbm)` compatibility interface."
msgstr ""

#: ../Doc/library/dbm.rst:326
msgid ""
"The NDBM library shipped as part of macOS has an undocumented limitation on "
"the size of values, which can result in corrupted database files when "
"storing values larger than this limit. Reading such corrupted files can "
"result in a hard crash (segmentation fault)."
msgstr ""

#: ../Doc/library/dbm.rst:335
msgid ""
"Raised on :mod:`dbm.ndbm`-specific errors, such as I/O errors. :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"Se lanza en errores específicos :mod:`bm.ndbm`, como errores de E/S. :exc:"
"`KeyError` lanza para errores generales de asignación, como especificar una "
"clave incorrecta."

#: ../Doc/library/dbm.rst:341
#, fuzzy
msgid "Name of the NDBM implementation library used."
msgstr "Nombre de la biblioteca de implementación ``ndbm`` utilizada."

#: ../Doc/library/dbm.rst:346
#, fuzzy
msgid "Open an NDBM database and return an :class:`!ndbm` object."
msgstr ""
"Abre el archivo *file* de la base de datos y retorna un objeto "
"correspondiente."

#: ../Doc/library/dbm.rst:348
#, fuzzy
msgid ""
"The basename of the database file (without the :file:`.dir` or :file:`.pag` "
"extensions)."
msgstr ""
"Abre una base de datos dbm y retorna un objeto ``ndbm``. El argumento "
"**filename** es el nombre de la base de datos (sin las extensiones :file:`."
"dir` y :file:`.pag`)."

#: ../Doc/library/dbm.rst:362
msgid ""
":class:`!ndbm` objects behave similar to :term:`mappings <mapping>`, but :"
"meth:`!items` and :meth:`!values` methods are not supported. The following "
"methods are also provided:"
msgstr ""

#: ../Doc/library/dbm.rst:366
msgid "Accepts :term:`path-like object` for filename."
msgstr "Acepta :term:`path-like object` como nombre de archivo."

#: ../Doc/library/dbm.rst:371
#, fuzzy
msgid "Close the NDBM database."
msgstr "Cierra la base de datos ``ndbm``."

#: ../Doc/library/dbm.rst:375
#, fuzzy
msgid "Remove all items from the NDBM database."
msgstr "Cierra la base de datos ``ndbm``."

#: ../Doc/library/dbm.rst:381
msgid ":mod:`dbm.dumb` --- Portable DBM implementation"
msgstr ":mod:`dbm.dumb` --- Implementación de DBM portátil"

#: ../Doc/library/dbm.rst:386
msgid "**Source code:** :source:`Lib/dbm/dumb.py`"
msgstr "**Código fuente:** :source:`Lib/dbm/dumb.py`"

#: ../Doc/library/dbm.rst:392
msgid ""
"The :mod:`dbm.dumb` module is intended as a last resort fallback for the :"
"mod:`dbm` module when a more robust module is not available. The :mod:`dbm."
"dumb` module is not written for speed and is not nearly as heavily used as "
"the other database modules."
msgstr ""
"El módulo :mod:`dbm.dumb` está pensado como último recurso para el módulo :"
"mod:`dbm` cuando no hay disponible un módulo más robusto. El módulo :mod:"
"`dbm.dymb` no está escrito para velocidad y no se usa tanto como los otros "
"módulos de base de datos."

#: ../Doc/library/dbm.rst:399
#, fuzzy
msgid ""
"The :mod:`dbm.dumb` module provides a persistent :class:`dict`-like "
"interface which is written entirely in Python. Unlike other :mod:`dbm` "
"backends, such as :mod:`dbm.gnu`, no external library is required."
msgstr ""
"El módulo :mod:`dbm.dumb` proporciona una interfaz persistente similar a un "
"diccionario que está escrita completamente en Python. A diferencia de otros "
"módulos como :mod:`dbm.gnu`, no se requiere una biblioteca externa. Al igual "
"que con otras asignaciones persistentes, las claves y los valores siempre se "
"almacenan como bytes."

#: ../Doc/library/dbm.rst:404
#, fuzzy
msgid "The :mod:`!dbm.dumb` module defines the following:"
msgstr "El módulo define lo siguiente:"

#: ../Doc/library/dbm.rst:408
msgid ""
"Raised on :mod:`dbm.dumb`-specific errors, such as I/O errors.  :exc:"
"`KeyError` is raised for general mapping errors like specifying an incorrect "
"key."
msgstr ""
"Se lanza en errores específicos :mod:`dbm.dumb`, como errores de E/S. :exc:"
"`KeyError` se lanza para errores de mapeo generales como especificar una "
"clave incorrecta."

#: ../Doc/library/dbm.rst:414
msgid ""
"Open a :mod:`!dbm.dumb` database. The returned database object behaves "
"similar to a :term:`mapping`, in addition to providing :meth:`~dumbdbm.sync` "
"and :meth:`~dumbdbm.close` methods."
msgstr ""

#: ../Doc/library/dbm.rst:419
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:  - :file:`{filename}.dat` - :file:`{filename}."
"dir`"
msgstr ""

#: ../Doc/library/dbm.rst:420
msgid ""
"The basename of the database file (without extensions). A new database "
"creates the following files:"
msgstr ""

#: ../Doc/library/dbm.rst:423
msgid ":file:`{filename}.dat`"
msgstr ""

#: ../Doc/library/dbm.rst:424
msgid ":file:`{filename}.dir`"
msgstr ""

#: ../Doc/library/dbm.rst:427
msgid ""
"* ``'r'``: |flag_r| * ``'w'``: |flag_w| * ``'c'`` (default): |flag_c| * "
"``'n'``: |flag_n|"
msgstr ""

#: ../Doc/library/dbm.rst:428
msgid "``'r'``: |flag_r|"
msgstr ""

#: ../Doc/library/dbm.rst:430
msgid "``'c'`` (default): |flag_c|"
msgstr ""

#: ../Doc/library/dbm.rst:437
msgid ""
"It is possible to crash the Python interpreter when loading a database with "
"a sufficiently large/complex entry due to stack depth limitations in "
"Python's AST compiler."
msgstr ""
"Es posible bloquear el intérprete de Python cuando se carga una base de "
"datos con una entrada suficientemente grande/compleja debido a las "
"limitaciones de profundidad de la pila en el compilador AST de Python."

#: ../Doc/library/dbm.rst:441
#, fuzzy
msgid ""
":func:`~dbm.dumb.open` always creates a new database when *flag* is ``'n'``."
msgstr ""
":func:`.open` siempre crea una nueva base de datos cuando el flag tiene "
"valor de ``'n'``."

#: ../Doc/library/dbm.rst:444
msgid ""
"A database opened read-only if *flag* is ``'r'``. A database is not created "
"if it does not exist if *flag* is ``'r'`` or ``'w'``."
msgstr ""

#: ../Doc/library/dbm.rst:451
#, fuzzy
msgid ""
"In addition to the methods provided by the :class:`collections.abc."
"MutableMapping` class, the following methods are provided:"
msgstr ""
"Además de los métodos proporcionados por la clase :class:`collections.abc."
"MutableMapping`, los objetos :class:`dumbdbm` proporcionan los siguientes "
"métodos:"

#: ../Doc/library/dbm.rst:457
msgid ""
"Synchronize the on-disk directory and data files.  This method is called by "
"the :meth:`Shelve.sync` method."
msgstr ""
"Sincroniza el directorio en disco y los archivos de datos. Este método es "
"llamado por el método :meth:`Shelve.sync`."

#: ../Doc/library/dbm.rst:462
#, fuzzy
msgid "Close the database."
msgstr "Cierra la base de datos ``ndbm``."

#: ../Doc/library/dbm.rst:388
msgid "databases"
msgstr "databases"
