# Copyright (C) 2001-2020, Python Software Foundation
# This file is distributed under the same license as the Python package.
# Maintained by the python-doc-es workteam.
# docs-es@python.org /
# https://mail.python.org/mailman3/lists/docs-es.python.org/
# Check https://github.com/python/python-docs-es/blob/3.8/TRANSLATORS to get
# the list of volunteers
#
msgid ""
msgstr ""
"Project-Id-Version: Python 3.8\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-11-21 16:38-0300\n"
"PO-Revision-Date: 2020-10-22 15:48+0200\n"
"Last-Translator: \n"
"Language: es\n"
"Language-Team: python-doc-es\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../Doc/whatsnew/3.1.rst:3
msgid "What's New In Python 3.1"
msgstr "Qué hay de nuevo en Python 3.1"

#: ../Doc/whatsnew/3.1.rst
msgid "Author"
msgstr "Autor"

#: ../Doc/whatsnew/3.1.rst:5
msgid "Raymond Hettinger"
msgstr "Raymond Hettinger"

#: ../Doc/whatsnew/3.1.rst:49
msgid ""
"This article explains the new features in Python 3.1, compared to 3.0. "
"Python 3.1 was released on June 27, 2009."
msgstr ""
"Este artículo explica las nuevas características de Python 3.1, en "
"comparación con 3.0. Python 3.1 se lanzó el 27 de junio de 2009."

#: ../Doc/whatsnew/3.1.rst:54
msgid "PEP 372: Ordered Dictionaries"
msgstr "PEP 372: Diccionarios ordenados"

#: ../Doc/whatsnew/3.1.rst:56
msgid ""
"Regular Python dictionaries iterate over key/value pairs in arbitrary order. "
"Over the years, a number of authors have written alternative implementations "
"that remember the order that the keys were originally inserted.  Based on "
"the experiences from those implementations, a new :class:`collections."
"OrderedDict` class has been introduced."
msgstr ""
"Los diccionarios de Python normales iteran sobre los pares clave/valor en "
"orden arbitrario. A través de los años, varios autores han escrito "
"implementaciones alternativas que recuerdan el orden en el que se insertaron "
"originalmente las claves. Basándose en las experiencias de esas "
"implementaciones, una nueva clase :class:`collections.OrderedDict` ha sido "
"introducida."

#: ../Doc/whatsnew/3.1.rst:62
msgid ""
"The OrderedDict API is substantially the same as regular dictionaries but "
"will iterate over keys and values in a guaranteed order depending on when a "
"key was first inserted.  If a new entry overwrites an existing entry, the "
"original insertion position is left unchanged.  Deleting an entry and "
"reinserting it will move it to the end."
msgstr ""
"La API de OrderedDict es sustancialmente la misma que la de los diccionarios "
"normales, pero iterará sobre las claves y los valores en un orden "
"garantizado, dependiendo de cuándo se insertó una clave por primera vez.  Si "
"una nueva entrada sobrescribe una entrada existente, la posición de "
"inserción original se deja sin cambios.  Eliminar una entrada y volver a "
"insertarla la moverá hasta el final."

#: ../Doc/whatsnew/3.1.rst:68
msgid ""
"The standard library now supports use of ordered dictionaries in several "
"modules.  The :mod:`configparser` module uses them by default.  This lets "
"configuration files be read, modified, and then written back in their "
"original order.  The *_asdict()* method for :func:`collections.namedtuple` "
"now returns an ordered dictionary with the values appearing in the same "
"order as the underlying tuple indices.  The :mod:`json` module is being "
"built-out with an *object_pairs_hook* to allow OrderedDicts to be built by "
"the decoder. Support was also added for third-party tools like `PyYAML "
"<https://pyyaml.org/>`_."
msgstr ""
"La biblioteca estándar ahora admite el uso de diccionarios ordenados en "
"varios módulos. El módulo :mod:`configparser` los usa por defecto. Esto "
"permite leer, modificar y volver a escribir los archivos de configuración en "
"su orden original. El método *_asdict()* para :func:`collections.namedtuple` "
"ahora devuelve un diccionario ordenado con los valores que aparecen en el "
"mismo orden que los índices de tupla subyacentes. El módulo :mod:`json` se "
"está construyendo con un *object_pairs_hook* para permitir que el "
"decodificador construya OrderedDicts. También se agregó soporte para "
"herramientas de terceros como `PyYAML <https://pyyaml.org/>`_."

#: ../Doc/whatsnew/3.1.rst:80
msgid ":pep:`372` - Ordered Dictionaries"
msgstr ":pep:`372` - Diccionarios ordenados"

#: ../Doc/whatsnew/3.1.rst:80
msgid ""
"PEP written by Armin Ronacher and Raymond Hettinger.  Implementation written "
"by Raymond Hettinger."
msgstr ""
"PEP escrito por Armin Ronacher y Raymond Hettinger.  Implementación escrita "
"por Raymond Hettinger."

#: ../Doc/whatsnew/3.1.rst:83
msgid ""
"Since an ordered dictionary remembers its insertion order, it can be used in "
"conjunction with sorting to make a sorted dictionary::"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:86
msgid ""
">>> # regular unsorted dictionary\n"
">>> d = {'banana': 3, 'apple':4, 'pear': 1, 'orange': 2}\n"
"\n"
">>> # dictionary sorted by key\n"
">>> OrderedDict(sorted(d.items(), key=lambda t: t[0]))\n"
"OrderedDict([('apple', 4), ('banana', 3), ('orange', 2), ('pear', 1)])\n"
"\n"
">>> # dictionary sorted by value\n"
">>> OrderedDict(sorted(d.items(), key=lambda t: t[1]))\n"
"OrderedDict([('pear', 1), ('orange', 2), ('banana', 3), ('apple', 4)])\n"
"\n"
">>> # dictionary sorted by length of the key string\n"
">>> OrderedDict(sorted(d.items(), key=lambda t: len(t[0])))\n"
"OrderedDict([('pear', 1), ('apple', 4), ('orange', 2), ('banana', 3)])"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:101
msgid ""
"The new sorted dictionaries maintain their sort order when entries are "
"deleted.  But when new keys are added, the keys are appended to the end and "
"the sort is not maintained."
msgstr ""

#: ../Doc/whatsnew/3.1.rst:107
msgid "PEP 378: Format Specifier for Thousands Separator"
msgstr "PEP 378: Especificador de formato para el separador de miles"

#: ../Doc/whatsnew/3.1.rst:109
msgid ""
"The built-in :func:`format` function and the :meth:`str.format` method use a "
"mini-language that now includes a simple, non-locale aware way to format a "
"number with a thousands separator.  That provides a way to humanize a "
"program's output, improving its professional appearance and readability::"
msgstr ""
"La función incorporada :func:`format` y el método :meth:`str.format` usan un "
"mini-lenguaje que ahora incluye una forma simple, que no tiene en cuenta la "
"configuración regional, de formatear un número con un separador de miles. "
"Eso proporciona una manera de humanizar la salida de un programa, mejorando "
"su apariencia profesional y legibilidad::"

#: ../Doc/whatsnew/3.1.rst:114
msgid ""
">>> format(1234567, ',d')\n"
"'1,234,567'\n"
">>> format(1234567.89, ',.2f')\n"
"'1,234,567.89'\n"
">>> format(12345.6 + 8901234.12j, ',f')\n"
"'12,345.600000+8,901,234.120000j'\n"
">>> format(Decimal('1234567.89'), ',f')\n"
"'1,234,567.89'"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:123
msgid ""
"The supported types are :class:`int`, :class:`float`, :class:`complex` and :"
"class:`decimal.Decimal`."
msgstr ""
"Los tipos soportados son :class:`int`, :class:`float`, :class:`complex` y :"
"class:`decimal.Decimal`."

#: ../Doc/whatsnew/3.1.rst:126
msgid ""
"Discussions are underway about how to specify alternative separators like "
"dots, spaces, apostrophes, or underscores.  Locale-aware applications should "
"use the existing *n* format specifier which already has some support for "
"thousands separators."
msgstr ""
"Se está discutiendo cómo especificar separadores alternativos como puntos, "
"espacios, apóstrofos o guiones bajos. Las aplicaciones que reconocen la "
"configuración regional deben usar el especificador de formato *n* existente, "
"que ya es compatible con el separadores de miles."

#: ../Doc/whatsnew/3.1.rst:134
msgid ":pep:`378` - Format Specifier for Thousands Separator"
msgstr ":pep:`378` - Especificador de formato para el separador de miles"

#: ../Doc/whatsnew/3.1.rst:134
msgid ""
"PEP written by Raymond Hettinger and implemented by Eric Smith and Mark "
"Dickinson."
msgstr ""
"PEP escrito por Raymond Hettinger e implementado por Eric Smith y Mark "
"Dickinson."

#: ../Doc/whatsnew/3.1.rst:139
msgid "Other Language Changes"
msgstr "Otros cambios del lenguaje"

#: ../Doc/whatsnew/3.1.rst:141
msgid "Some smaller changes made to the core Python language are:"
msgstr "Algunos cambios pequeños en el núcleo del lenguaje Python son:"

#: ../Doc/whatsnew/3.1.rst:143
msgid ""
"Directories and zip archives containing a :file:`__main__.py` file can now "
"be executed directly by passing their name to the interpreter. The directory/"
"zipfile is automatically inserted as the first entry in sys.path.  "
"(Suggestion and initial patch by Andy Chu; revised patch by Phillip J. Eby "
"and Nick Coghlan; :issue:`1739468`.)"
msgstr ""
"Los directorios y archivos zip que contienen un archivo :file:`__main__.py` "
"pueden ahora ser ejecutados directamente pasando su nombre al intérprete. El "
"directorio/archivo zip es automáticamente insertado como la primera entrada "
"en sys.path.  (Sugerencia y parche inicial por Andy Chu; parche revisado por "
"Phillip J. Eby y Nick Coghlan; :issue:`1739468`.)"

#: ../Doc/whatsnew/3.1.rst:149
msgid ""
"The :func:`int` type gained a ``bit_length`` method that returns the number "
"of bits necessary to represent its argument in binary::"
msgstr ""
"El tipo :func:`int` ganó un método ``bit_length`` que retorna el número de "
"bits necesarios para representar sus argumentos en binario::"

#: ../Doc/whatsnew/3.1.rst:152
msgid ""
">>> n = 37\n"
">>> bin(37)\n"
"'0b100101'\n"
">>> n.bit_length()\n"
"6\n"
">>> n = 2**123-1\n"
">>> n.bit_length()\n"
"123\n"
">>> (n+1).bit_length()\n"
"124"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:163
msgid ""
"(Contributed by Fredrik Johansson, Victor Stinner, Raymond Hettinger, and "
"Mark Dickinson; :issue:`3439`.)"
msgstr ""
"(Contribución de Fredrik Johansson, Victor Stinner, Raymond Hettinger y Mark "
"Dickinson; :issue:`3439`.)"

#: ../Doc/whatsnew/3.1.rst:166
msgid ""
"The fields in :func:`format` strings can now be automatically numbered::"
msgstr ""
"Los campos en las cadenas de formato de :func:`format` ahora pueden ser "
"automáticamente numerados::"

#: ../Doc/whatsnew/3.1.rst:169
msgid ""
">>> 'Sir {} of {}'.format('Gallahad', 'Camelot')\n"
"'Sir Gallahad of Camelot'"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:172
msgid ""
"Formerly, the string would have required numbered fields such as: ``'Sir {0} "
"of {1}'``."
msgstr ""
"Anteriormente, la cadena requería campos numerados como: ``'Sir {0} of "
"{1}'``."

#: ../Doc/whatsnew/3.1.rst:175
msgid "(Contributed by Eric Smith; :issue:`5237`.)"
msgstr "(Contribución de Eric Smith; :issue:`5237`.)"

#: ../Doc/whatsnew/3.1.rst:177
#, fuzzy
msgid ""
"The :func:`!string.maketrans` function is deprecated and is replaced by new "
"static methods, :meth:`bytes.maketrans` and :meth:`bytearray.maketrans`. "
"This change solves the confusion around which types were supported by the :"
"mod:`string` module. Now, :class:`str`, :class:`bytes`, and :class:"
"`bytearray` each have their own **maketrans** and **translate** methods with "
"intermediate translation tables of the appropriate type."
msgstr ""
"La función :func:`string.maketrans` está en desuso y se reemplaza por nuevos "
"métodos estáticos, :meth:`bytes.maketrans` y :meth:`bytearray.maketrans`. "
"Este cambio resuelve la confusión en torno a los tipos que fueron soportados "
"por el módulo :mod:`string`. Ahora, :class:`str`, :class:`bytes` y :class:"
"`bytearray` tienen sus propios métodos **maketrans** y **translate** con "
"tablas de traducción intermedias del tipo adecuado."

#: ../Doc/whatsnew/3.1.rst:184
msgid "(Contributed by Georg Brandl; :issue:`5675`.)"
msgstr "(Contribución de Georg Brandl; :issue:`5675`.)"

#: ../Doc/whatsnew/3.1.rst:186
msgid ""
"The syntax of the :keyword:`with` statement now allows multiple context "
"managers in a single statement::"
msgstr ""
"La sintaxis de la sentencia :keyword:`with` ahora permite múltiples gestores "
"de contexto en una sola declaración::"

#: ../Doc/whatsnew/3.1.rst:189
msgid ""
">>> with open('mylog.txt') as infile, open('a.out', 'w') as outfile:\n"
"...     for line in infile:\n"
"...         if '<critical>' in line:\n"
"...             outfile.write(line)"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:194
#, fuzzy
msgid ""
"With the new syntax, the :func:`!contextlib.nested` function is no longer "
"needed and is now deprecated."
msgstr ""
"Con la nueva sintaxis, la función :func:`contextlib.nested` ya no es "
"necesaria y ahora está obsoleta."

#: ../Doc/whatsnew/3.1.rst:197
msgid ""
"(Contributed by Georg Brandl and Mattias Brändström; `appspot issue 53094 "
"<https://codereview.appspot.com/53094>`_.)"
msgstr ""
"(Contribución de Georg Brandl y Mattias Brändström; `appspot issue 53094 "
"<https://codereview.appspot.com/53094>`_.)"

#: ../Doc/whatsnew/3.1.rst:200
msgid ""
"``round(x, n)`` now returns an integer if *x* is an integer. Previously it "
"returned a float::"
msgstr ""
"``round(x, n)`` ahora retorna un número entero si *x* es un entero. "
"Anteriormente retornaba un número flotante::"

#: ../Doc/whatsnew/3.1.rst:203
msgid ""
">>> round(1123, -2)\n"
"1100"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:206
msgid "(Contributed by Mark Dickinson; :issue:`4707`.)"
msgstr "(Contribución de Mark Dickinson; :issue:`4707`.)"

#: ../Doc/whatsnew/3.1.rst:208
#, fuzzy
msgid ""
"Python now uses David Gay's algorithm for finding the shortest floating-"
"point representation that doesn't change its value.  This should help "
"mitigate some of the confusion surrounding binary floating-point numbers."
msgstr ""
"Python ahora utiliza el algoritmo de David Gay para encontrar la "
"representación de coma flotante más corta que no cambia su valor.  Esto "
"debería ayudar a mitigar parte de la confusión que rodea a los números de "
"coma flotante binarios."

#: ../Doc/whatsnew/3.1.rst:213
#, fuzzy
msgid ""
"The significance is easily seen with a number like ``1.1`` which does not "
"have an exact equivalent in binary floating point.  Since there is no exact "
"equivalent, an expression like ``float('1.1')`` evaluates to the nearest "
"representable value which is ``0x1.199999999999ap+0`` in hex or "
"``1.100000000000000088817841970012523233890533447265625`` in decimal. That "
"nearest value was and still is used in subsequent floating-point "
"calculations."
msgstr ""
"La importancia se ve fácilmente con un número como ``1.1``, que no tiene un "
"equivalente exacto en coma flotante binaria.  Puesto que no hay un "
"equivalente exacto, una expresión como ``float('1.1')`` se evalúa como el "
"valor representable más cercano, que es ``0x1.199999999999ap+0`` en "
"hexadecimal o ``1.100000000000000088817841970012523233890533447265625`` en "
"decimal. Ese valor más cercano fue y todavía es utilizado en los cálculos de "
"coma flotante posteriores."

#: ../Doc/whatsnew/3.1.rst:221
#, fuzzy
msgid ""
"What is new is how the number gets displayed.  Formerly, Python used a "
"simple approach.  The value of ``repr(1.1)`` was computed as ``format(1.1, "
"'.17g')`` which evaluated to ``'1.1000000000000001'``. The advantage of "
"using 17 digits was that it relied on IEEE-754 guarantees to assure that "
"``eval(repr(1.1))`` would round-trip exactly to its original value.  The "
"disadvantage is that many people found the output to be confusing (mistaking "
"intrinsic limitations of binary floating-point representation as being a "
"problem with Python itself)."
msgstr ""
"La novedad es cómo se muestra el número.  Anteriormente, Python usaba un "
"enfoque simple.  El valor de ``repr(1.1)`` se calculaba como ``format(1.1, "
"'.17g')`` que era evaluado como ``'1.1000000000000001'``. La ventaja de "
"utilizar 17 dígitos era que se basaba en las garantías de IEEE-754 para "
"asegurar que ``eval(repr(1.1))`` se volviera a redondear exactamente a su "
"valor original. La desventaja es que muchas personas encontraban el "
"resultado confuso (confundiendo las limitaciones intrínsecas de la "
"representación de coma flotante binaria con un problema con Python en sí)."

#: ../Doc/whatsnew/3.1.rst:230
msgid ""
"The new algorithm for ``repr(1.1)`` is smarter and returns ``'1.1'``. "
"Effectively, it searches all equivalent string representations (ones that "
"get stored with the same underlying float value) and returns the shortest "
"representation."
msgstr ""
"El nuevo algoritmo para ``repr(1.1)`` es más inteligente y retorna "
"``'1.1'``. Efectivamente, busca todas las representaciones de cadenas "
"equivalentes (las que se almacenan con el mismo valor flotante subyacente) y "
"retorna la representación más corta."

#: ../Doc/whatsnew/3.1.rst:235
msgid ""
"The new algorithm tends to emit cleaner representations when possible, but "
"it does not change the underlying values.  So, it is still the case that "
"``1.1 + 2.2 != 3.3`` even though the representations may suggest otherwise."
msgstr ""
"El nuevo algoritmo tiende a emitir representaciones más limpias cuando es "
"posible, pero esto no cambia los valores subyacentes.  Por lo tanto, todavía "
"se da el caso ``1.1 + 2.2 != 3.3``, aún cuando las representaciones puedan "
"sugerir lo contrario."

#: ../Doc/whatsnew/3.1.rst:239
#, fuzzy
msgid ""
"The new algorithm depends on certain features in the underlying floating-"
"point implementation.  If the required features are not found, the old "
"algorithm will continue to be used.  Also, the text pickle protocols assure "
"cross-platform portability by using the old algorithm."
msgstr ""
"El nuevo algoritmo depende de ciertas características de la implementación "
"de coma flotante subyacente.  Si no se encuentran las características "
"necesarias, el algoritmo antiguo seguirá utilizándose.  Además, los "
"protocolos de pickle de texto aseguran la portabilidad multiplataforma "
"mediante el algoritmo antiguo."

#: ../Doc/whatsnew/3.1.rst:244
msgid "(Contributed by Eric Smith and Mark Dickinson; :issue:`1580`)"
msgstr "(Contribución de Eric Smith y Mark Dickinson; :issue:`1580`)"

#: ../Doc/whatsnew/3.1.rst:247
msgid "New, Improved, and Deprecated Modules"
msgstr "Módulos nuevos, mejorados y obsoletos"

#: ../Doc/whatsnew/3.1.rst:249
msgid ""
"Added a :class:`collections.Counter` class to support convenient counting of "
"unique items in a sequence or iterable::"
msgstr ""
"Se ha añadido una clase :class:`collections.Counter` para admitir el "
"recuento conveniente de elementos únicos en una secuencia o una iteración::"

#: ../Doc/whatsnew/3.1.rst:252
msgid ""
">>> Counter(['red', 'blue', 'red', 'green', 'blue', 'blue'])\n"
"Counter({'blue': 3, 'red': 2, 'green': 1})"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:255
msgid "(Contributed by Raymond Hettinger; :issue:`1696199`.)"
msgstr "(Contribución de Raymond Hettinger; :issue:`1696199`.)"

#: ../Doc/whatsnew/3.1.rst:257
msgid ""
"Added a new module, :mod:`tkinter.ttk` for access to the Tk themed widget "
"set. The basic idea of ttk is to separate, to the extent possible, the code "
"implementing a widget's behavior from the code implementing its appearance."
msgstr ""
"Se ha añadido un nuevo módulo :mod:`tkinter.ttk` para acceder al conjunto de "
"widgets temáticos de Tk. La idea básica de ttk es separar, dentro de lo "
"posible, el código que implementa el comportamiento de un widget del código "
"que implementa su apariencia."

#: ../Doc/whatsnew/3.1.rst:261
msgid "(Contributed by Guilherme Polo; :issue:`2983`.)"
msgstr "(Contribución de Guilherme Polo; :issue:`2983`.)"

#: ../Doc/whatsnew/3.1.rst:263
msgid ""
"The :class:`gzip.GzipFile` and :class:`bz2.BZ2File` classes now support the "
"context management protocol::"
msgstr ""
"Las clases :class:`gzip.GzipFile` y :class:`bz2.BZ2File` ahora admiten el "
"protocolo de gestión de contexto::"

#: ../Doc/whatsnew/3.1.rst:266
msgid ""
">>> # Automatically close file after writing\n"
">>> with gzip.GzipFile(filename, \"wb\") as f:\n"
"...     f.write(b\"xxx\")"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:270
msgid "(Contributed by Antoine Pitrou.)"
msgstr "(Contribución de Antoine Pitrou.)"

#: ../Doc/whatsnew/3.1.rst:272
msgid ""
"The :mod:`decimal` module now supports methods for creating a decimal object "
"from a binary :class:`float`.  The conversion is exact but can sometimes be "
"surprising::"
msgstr ""
"El módulo :mod:`decimal` ahora admite métodos para crear un objeto decimal "
"de un :class:`float` binario.  La conversión es exacta pero puede ser a "
"veces una sorpresa::"

#: ../Doc/whatsnew/3.1.rst:276
msgid ""
">>> Decimal.from_float(1.1)\n"
"Decimal('1.100000000000000088817841970012523233890533447265625')"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:279
msgid ""
"The long decimal result shows the actual binary fraction being stored for "
"*1.1*.  The fraction has many digits because *1.1* cannot be exactly "
"represented in binary."
msgstr ""
"El resultado decimal largo muestra la fracción binaria real que se almacena "
"para *1.1*. La fracción tiene muchos dígitos porque *1.1* no se puede "
"representar exactamente en binario."

#: ../Doc/whatsnew/3.1.rst:283
msgid "(Contributed by Raymond Hettinger and Mark Dickinson.)"
msgstr "(Contribución de Raymond Hettinger y Mark Dickinson.)"

#: ../Doc/whatsnew/3.1.rst:285
msgid ""
"The :mod:`itertools` module grew two new functions.  The :func:`itertools."
"combinations_with_replacement` function is one of four for generating "
"combinatorics including permutations and Cartesian products.  The :func:"
"`itertools.compress` function mimics its namesake from APL.  Also, the "
"existing :func:`itertools.count` function now has an optional *step* "
"argument and can accept any type of counting sequence including :class:"
"`fractions.Fraction` and :class:`decimal.Decimal`::"
msgstr ""
"El módulo :mod:`itertools` desarrolló dos nuevas funciones.  La función :"
"func:`itertools.combinations_with_replacement` es una de las cuatro para "
"generar combinatorias que incluyen permutaciones y productos cartesianos.  "
"La función :func:`itertools.compress` imita su homónimo de APL.  Además, la "
"función existente :func:`itertools.count` tiene ahora un argumento *step* "
"opcional y puede aceptar cualquier tipo de secuencia de conteo, incluyendo :"
"class:`fractions.Fraction` y :class:`decimal.Decimal`::"

#: ../Doc/whatsnew/3.1.rst:294
msgid ""
">>> [p+q for p,q in combinations_with_replacement('LOVE', 2)]\n"
"['LL', 'LO', 'LV', 'LE', 'OO', 'OV', 'OE', 'VV', 'VE', 'EE']\n"
"\n"
">>> list(compress(data=range(10), selectors=[0,0,1,1,0,1,0,1,0,0]))\n"
"[2, 3, 5, 7]\n"
"\n"
">>> c = count(start=Fraction(1,2), step=Fraction(1,6))\n"
">>> [next(c), next(c), next(c), next(c)]\n"
"[Fraction(1, 2), Fraction(2, 3), Fraction(5, 6), Fraction(1, 1)]"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:304
msgid "(Contributed by Raymond Hettinger.)"
msgstr "(Contribución de Raymond Hettinger.)"

#: ../Doc/whatsnew/3.1.rst:306
msgid ""
":func:`collections.namedtuple` now supports a keyword argument *rename* "
"which lets invalid fieldnames be automatically converted to positional names "
"in the form _0, _1, etc.  This is useful when the field names are being "
"created by an external source such as a CSV header, SQL field list, or user "
"input::"
msgstr ""
":func:`collections.namedtuple` ahora admite un argumento de palabra clave "
"*rename* que permite que los campos de nombre inválidos se conviertan "
"automáticamente en nombres posicionados de la forma _0, _1, etc.  Esto es de "
"utilidad cuando los nombres del campo están siendo creados por una fuente "
"externa como un encabezado CSV, una lista de campos SQL, o la entrada del "
"usuario::"

#: ../Doc/whatsnew/3.1.rst:312
msgid ""
">>> query = input()\n"
"SELECT region, dept, count(*) FROM main GROUPBY region, dept\n"
"\n"
">>> cursor.execute(query)\n"
">>> query_fields = [desc[0] for desc in cursor.description]\n"
">>> UserQuery = namedtuple('UserQuery', query_fields, rename=True)\n"
">>> pprint.pprint([UserQuery(*row) for row in cursor])\n"
"[UserQuery(region='South', dept='Shipping', _2=185),\n"
" UserQuery(region='North', dept='Accounting', _2=37),\n"
" UserQuery(region='West', dept='Sales', _2=419)]"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:323
msgid "(Contributed by Raymond Hettinger; :issue:`1818`.)"
msgstr "(Contribución de Raymond Hettinger; :issue:`1818`.)"

#: ../Doc/whatsnew/3.1.rst:325
msgid ""
"The :func:`re.sub`, :func:`re.subn` and :func:`re.split` functions now "
"accept a flags parameter."
msgstr ""
"Las funciones :func:`re.sub`, :func:`re.subn` y :func:`re.split` ahora "
"admiten un parámetro *flags*."

#: ../Doc/whatsnew/3.1.rst:328
msgid "(Contributed by Gregory Smith.)"
msgstr "(Contribución de Gregory Smith.)"

#: ../Doc/whatsnew/3.1.rst:330
msgid ""
"The :mod:`logging` module now implements a simple :class:`logging."
"NullHandler` class for applications that are not using logging but are "
"calling library code that does.  Setting-up a null handler will suppress "
"spurious warnings such as \"No handlers could be found for logger foo\"::"
msgstr ""
"El módulo :mod:`logging` ahora implementa una clase simple :class:`logging."
"NullHandler` para aplicaciones que no utilizan el registro pero llaman al "
"código de una biblioteca que si lo hace.  La configuración de un controlador "
"nulo suprimirá las advertencias falsas como \"No handlers could be found for "
"logger foo\"::"

#: ../Doc/whatsnew/3.1.rst:335
msgid ""
">>> h = logging.NullHandler()\n"
">>> logging.getLogger(\"foo\").addHandler(h)"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:338
msgid "(Contributed by Vinay Sajip; :issue:`4384`)."
msgstr "(Contribución de Vinay Sajip; :issue:`4384`)."

#: ../Doc/whatsnew/3.1.rst:340
msgid ""
"The :mod:`runpy` module which supports the ``-m`` command line switch now "
"supports the execution of packages by looking for and executing a "
"``__main__`` submodule when a package name is supplied."
msgstr ""
"El módulo :mod:`runpy` que admite el modificador de línea de comando ``-m`` "
"ahora admite la ejecución de paquetes al buscar y ejecutar un submódulo "
"``__main__`` cuando se proporciona un nombre de paquete."

#: ../Doc/whatsnew/3.1.rst:344
msgid "(Contributed by Andi Vajda; :issue:`4195`.)"
msgstr "(Contribución de Andi Vajda; :issue:`4195`.)"

#: ../Doc/whatsnew/3.1.rst:346
msgid ""
"The :mod:`pdb` module can now access and display source code loaded via :mod:"
"`zipimport` (or any other conformant :pep:`302` loader)."
msgstr ""
"El módulo :mod:`pdb` puede ahora acceder y mostrar el código fuente cargado "
"a través de :mod:`zipimport` (o cualquier otro cargador conforme :pep:`302`)."

#: ../Doc/whatsnew/3.1.rst:349
msgid "(Contributed by Alexander Belopolsky; :issue:`4201`.)"
msgstr "(Contribución de Alexander Belopolsky; :issue:`4201`.)"

#: ../Doc/whatsnew/3.1.rst:351
msgid ":class:`functools.partial` objects can now be pickled."
msgstr ""
"Los objetos :class:`functools.partial` pueden ser ahora serializados "
"(*pickled*)."

#: ../Doc/whatsnew/3.1.rst:353
msgid ""
"(Suggested by Antoine Pitrou and Jesse Noller.  Implemented by Jack "
"Diederich; :issue:`5228`.)"
msgstr ""
"(Sugerido por Antoine Pitrou y Jesse Noller.  Implementado por Jack "
"Diederich; :issue:`5228`.)"

#: ../Doc/whatsnew/3.1.rst:356
msgid ""
"Add :mod:`pydoc` help topics for symbols so that ``help('@')`` works as "
"expected in the interactive environment."
msgstr ""
"Se agrega temas de ayuda :mod:`pydoc` para símbolos de modo que "
"``help('@')`` funcione como se espera en un entorno interactivo."

#: ../Doc/whatsnew/3.1.rst:359
msgid "(Contributed by David Laban; :issue:`4739`.)"
msgstr "(Contribución de David Laban; :issue:`4739`.)"

#: ../Doc/whatsnew/3.1.rst:361
msgid ""
"The :mod:`unittest` module now supports skipping individual tests or classes "
"of tests. And it supports marking a test as an expected failure, a test that "
"is known to be broken, but shouldn't be counted as a failure on a "
"TestResult::"
msgstr ""
"El módulo :mod:`unittest` ahora admite saltear pruebas individuales o clases "
"de pruebas. Y admite marcar una prueba como una falla esperada, una prueba "
"que se sabe que está rota, pero que no debe contarse como una falla en un "
"TestResult::"

#: ../Doc/whatsnew/3.1.rst:366
msgid ""
"class TestGizmo(unittest.TestCase):\n"
"\n"
"    @unittest.skipUnless(sys.platform.startswith(\"win\"), \"requires "
"Windows\")\n"
"    def test_gizmo_on_windows(self):\n"
"        ...\n"
"\n"
"    @unittest.expectedFailure\n"
"    def test_gimzo_without_required_library(self):\n"
"        ..."
msgstr ""

#: ../Doc/whatsnew/3.1.rst:376
msgid ""
"Also, tests for exceptions have been builtout to work with context managers "
"using the :keyword:`with` statement::"
msgstr ""
"Además, se han creado pruebas de excepciones para trabajar con gestores de "
"contexto usando la declaración :keyword:`with`::"

#: ../Doc/whatsnew/3.1.rst:379
msgid ""
"def test_division_by_zero(self):\n"
"    with self.assertRaises(ZeroDivisionError):\n"
"        x / 0"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:383
#, fuzzy
msgid ""
"In addition, several new assertion methods were added including :meth:"
"`~unittest.TestCase.assertSetEqual`, :meth:`~unittest.TestCase."
"assertDictEqual`, :meth:`!assertDictContainsSubset`, :meth:`~unittest."
"TestCase.assertListEqual`, :meth:`~unittest.TestCase.assertTupleEqual`, :"
"meth:`~unittest.TestCase.assertSequenceEqual`, :meth:`assertRaisesRegexp() "
"<unittest.TestCase.assertRaisesRegex>`, :meth:`~unittest.TestCase."
"assertIsNone`, and :meth:`~unittest.TestCase.assertIsNotNone`."
msgstr ""
"Además, se agregaron varios métodos de aserción nuevos, incluyendo :func:"
"`assertSetEqual`, :func:`assertDictEqual`, :func:"
"`assertDictContainsSubset`, :func:`assertListEqual`, :func:"
"`assertTupleEqual`, :func:`assertSequenceEqual`, :func:"
"`assertRaisesRegexp`, :func:`assertIsNone`, y :func:`assertIsNotNone`."

#: ../Doc/whatsnew/3.1.rst:394
msgid "(Contributed by Benjamin Peterson and Antoine Pitrou.)"
msgstr "(Contribución de Benjamin Peterson y Antoine Pitrou.)"

#: ../Doc/whatsnew/3.1.rst:396
#, fuzzy
msgid ""
"The :mod:`io` module has three new constants for the :meth:`~io.IOBase.seek` "
"method: :data:`~os.SEEK_SET`, :data:`~os.SEEK_CUR`, and :data:`~os.SEEK_END`."
msgstr ""
"El módulo :mod:`io` tiene tres nuevas constantes para el método :meth:"
"`seek`: :data:`SEEK_SET`, :data:`SEEK_CUR` y :data:`SEEK_END`."

#: ../Doc/whatsnew/3.1.rst:399
#, fuzzy
msgid "The :data:`sys.version_info` tuple is now a named tuple::"
msgstr "La tupla :attr:`sys.version_info` es ahora una tupla nombrada::"

#: ../Doc/whatsnew/3.1.rst:401
msgid ""
">>> sys.version_info\n"
"sys.version_info(major=3, minor=1, micro=0, releaselevel='alpha', serial=2)"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:404
msgid "(Contributed by Ross Light; :issue:`4285`.)"
msgstr "(Contribución de Ross Light; :issue:`4285`.)"

#: ../Doc/whatsnew/3.1.rst:406
#, fuzzy
msgid "The :mod:`!nntplib` and :mod:`imaplib` modules now support IPv6."
msgstr ""
"Los módulos :mod:`nntplib` y :mod:`imaplib` ahora tienen soporte de IPv6."

#: ../Doc/whatsnew/3.1.rst:408
msgid "(Contributed by Derek Morr; :issue:`1655` and :issue:`1664`.)"
msgstr "(Contribución de Derek Morr; :issue:`1655` y :issue:`1664`.)"

#: ../Doc/whatsnew/3.1.rst:410
msgid ""
"The :mod:`pickle` module has been adapted for better interoperability with "
"Python 2.x when used with protocol 2 or lower.  The reorganization of the "
"standard library changed the formal reference for many objects.  For "
"example, ``__builtin__.set`` in Python 2 is called ``builtins.set`` in "
"Python 3. This change confounded efforts to share data between different "
"versions of Python.  But now when protocol 2 or lower is selected, the "
"pickler will automatically use the old Python 2 names for both loading and "
"dumping. This remapping is turned-on by default but can be disabled with the "
"*fix_imports* option::"
msgstr ""
"El módulo :mod:`pickle` ha sido adaptado para una mejor interoperabilidad "
"con 2.x cuando es usado con un protocolo 2 o menor.  La reorganización de la "
"biblioteca estándar cambió la referencia formal para varios objetos.  Por "
"ejemplo, ``__builtin__.set`` en Python 2 es llamado ``builtins.set`` en "
"Python 3. Este cambio confundió los esfuerzos de compartir datos entre "
"diferentes versiones de Python.  Pero ahora cuando el protocolo 2 o menor es "
"seleccionado, el pickler va a usar automáticamente los nombres antiguos de "
"Python 2 tanto para carga como para volcado. Esta reasignación es activada "
"de manera predeterminada pero puede ser desactivada con la opción "
"*fix_imports*::"

#: ../Doc/whatsnew/3.1.rst:420
msgid ""
">>> s = {1, 2, 3}\n"
">>> pickle.dumps(s, protocol=0)\n"
"b'c__builtin__\\nset\\np0\\n((lp1\\nL1L\\naL2L\\naL3L\\natp2\\nRp3\\n.'\n"
">>> pickle.dumps(s, protocol=0, fix_imports=False)\n"
"b'cbuiltins\\nset\\np0\\n((lp1\\nL1L\\naL2L\\naL3L\\natp2\\nRp3\\n.'"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:426
msgid ""
"An unfortunate but unavoidable side-effect of this change is that protocol 2 "
"pickles produced by Python 3.1 won't be readable with Python 3.0. The latest "
"pickle protocol, protocol 3, should be used when migrating data between "
"Python 3.x implementations, as it doesn't attempt to remain compatible with "
"Python 2.x."
msgstr ""
"Un efecto secundario, desafortunado pero inevitable, de este cambio es que "
"los pickles del protocolo 2 producidos con Python 3.1 no serán legibles con "
"Python 3.0. El protocolo de pickle más reciente, protocolo 3, debe "
"utilizarse al migrar datos entre implementaciones de Python 3.x, ya que no "
"intenta seguir siendo compatible con Python 2.x."

#: ../Doc/whatsnew/3.1.rst:432
msgid ""
"(Contributed by Alexandre Vassalotti and Antoine Pitrou, :issue:`6137`.)"
msgstr ""
"(Contribución de Alexandre Vassalotti y Antoine Pitrou, :issue:`6137`.)"

#: ../Doc/whatsnew/3.1.rst:434
msgid ""
"A new module, :mod:`importlib` was added.  It provides a complete, portable, "
"pure Python reference implementation of the :keyword:`import` statement and "
"its counterpart, the :func:`__import__` function.  It represents a "
"substantial step forward in documenting and defining the actions that take "
"place during imports."
msgstr ""
"Se agregó un nuevo módulo, :mod:`importlib`. Proporciona una implementación "
"de referencia de Python completa, portátil y pura de la instrucción :keyword:"
"`import` y su contraparte, la función  :func:`__import__` . Representa un "
"avance sustancial en la documentación y definición de las acciones que "
"tienen lugar durante las importaciones."

#: ../Doc/whatsnew/3.1.rst:440
msgid "(Contributed by Brett Cannon.)"
msgstr "(Contribución de Brett Cannon.)"

#: ../Doc/whatsnew/3.1.rst:443
msgid "Optimizations"
msgstr "Optimizaciones"

#: ../Doc/whatsnew/3.1.rst:445
msgid "Major performance enhancements have been added:"
msgstr "Se han agregado importantes mejoras de rendimiento:"

#: ../Doc/whatsnew/3.1.rst:447
msgid ""
"The new I/O library (as defined in :pep:`3116`) was mostly written in Python "
"and quickly proved to be a problematic bottleneck in Python 3.0. In Python "
"3.1, the I/O library has been entirely rewritten in C and is 2 to 20 times "
"faster depending on the task at hand. The pure Python version is still "
"available for experimentation purposes through the ``_pyio`` module."
msgstr ""
"La nueva biblioteca I/O (definida en :pep:`3116`) estaba escrita mayormente "
"en Python y rápidamente demostró ser un cuello de botella problemático en "
"Python 3.0. En Python 3.1, la biblioteca I/O ha sido reescrita enteramente "
"en C y es de 2 a 20 veces más rápida dependiendo en la tarea a manejar. La "
"versión puramente en Python está aún disponible para fines experimentales a "
"través del módulo ``_pyio``."

#: ../Doc/whatsnew/3.1.rst:454
msgid "(Contributed by Amaury Forgeot d'Arc and Antoine Pitrou.)"
msgstr "(Contribución de Amaury Forgeot d'Arc y Antoine Pitrou.)"

#: ../Doc/whatsnew/3.1.rst:456
msgid ""
"Added a heuristic so that tuples and dicts containing only untrackable "
"objects are not tracked by the garbage collector. This can reduce the size "
"of collections and therefore the garbage collection overhead on long-running "
"programs, depending on their particular use of datatypes."
msgstr ""
"Se ha añadido una heurística para que el recolector de basura no realice el "
"seguimiento de tuplas y diccionarios que contengan solo objetos no "
"rastreables. Esto puede reducir el tamaño de las colecciones y, por lo "
"tanto, la sobrecarga de recolección de elementos no utilizados en programas "
"de larga ejecución, en función de su uso particular de los tipos de datos."

#: ../Doc/whatsnew/3.1.rst:461
msgid "(Contributed by Antoine Pitrou, :issue:`4688`.)"
msgstr "(Contribución de Antoine Pitrou, :issue:`4688`.)"

#: ../Doc/whatsnew/3.1.rst:463
msgid ""
"Enabling a configure option named ``--with-computed-gotos`` on compilers "
"that support it (notably: gcc, SunPro, icc), the bytecode evaluation loop is "
"compiled with a new dispatch mechanism which gives speedups of up to 20%, "
"depending on the system, the compiler, and the benchmark."
msgstr ""
"Habilitando una opción de configuración llamada ``--with-computed-gotos`` en "
"compiladores que la admiten (en particular: gcc, SunPro, icc), el ciclo de "
"evaluación del bytecode se compila con un nuevo mecanismo de despacho que "
"proporciona aceleraciones de hasta un 20% , dependiendo del sistema, del "
"compilador y del punto de referencia."

#: ../Doc/whatsnew/3.1.rst:469
msgid ""
"(Contributed by Antoine Pitrou along with a number of other participants, :"
"issue:`4753`)."
msgstr ""
"(Contribución de Antoine Pitrou junto con varios otros participantes, :issue:"
"`4753`)."

#: ../Doc/whatsnew/3.1.rst:472
msgid ""
"The decoding of UTF-8, UTF-16 and LATIN-1 is now two to four times faster."
msgstr ""
"La decodificación de UTF-8, UTF-16 y LATIN-1 es ahora de dos a cuatro veces "
"más rápida."

#: ../Doc/whatsnew/3.1.rst:475
msgid ""
"(Contributed by Antoine Pitrou and Amaury Forgeot d'Arc, :issue:`4868`.)"
msgstr ""
"(Contribución de Antoine Pitrou y Amaury Forgeot d'Arc, :issue:`4868`.)"

#: ../Doc/whatsnew/3.1.rst:477
msgid ""
"The :mod:`json` module now has a C extension to substantially improve its "
"performance.  In addition, the API was modified so that json works only "
"with :class:`str`, not with :class:`bytes`.  That change makes the module "
"closely match the `JSON specification <https://json.org/>`_ which is defined "
"in terms of Unicode."
msgstr ""
"El módulo :mod:`json` ahora tiene una extensión C para mejorar "
"sustancialmente su rendimiento. Además, se modificó la API para que json "
"funcione solo con :class:`str`, no con :class:`bytes`. Ese cambio hace que "
"el módulo coincida estrechamente con el `JSON specification <https://json."
"org/>`_ que se define en términos de Unicode."

#: ../Doc/whatsnew/3.1.rst:483
msgid ""
"(Contributed by Bob Ippolito and converted to Py3.1 by Antoine Pitrou and "
"Benjamin Peterson; :issue:`4136`.)"
msgstr ""
"(Contribución de Bob Ippolito y convertido a Py3.1 por Antoine Pitrou y "
"Benjamin Peterson; :issue:`4136`.)"

#: ../Doc/whatsnew/3.1.rst:486
msgid ""
"Unpickling now interns the attribute names of pickled objects.  This saves "
"memory and allows pickles to be smaller."
msgstr ""
"La deserialización (*unpickling*) ahora interna los nombres de los atributos "
"de los objetos serializados (*pickled*). Esto ahorra memoria y permite que "
"los pickles sean más pequeños."

#: ../Doc/whatsnew/3.1.rst:489
msgid "(Contributed by Jake McGuire and Antoine Pitrou; :issue:`5084`.)"
msgstr "(Contribución de Jake McGuire y Antoine Pitrou; :issue:`5084`.)"

#: ../Doc/whatsnew/3.1.rst:492
msgid "IDLE"
msgstr "IDLE"

#: ../Doc/whatsnew/3.1.rst:494
msgid ""
"IDLE's format menu now provides an option to strip trailing whitespace from "
"a source file."
msgstr ""
"El menú de formato del IDLE ahora proporciona una opción para eliminar los "
"espacios en blanco finales de un archivo de código fuente."

#: ../Doc/whatsnew/3.1.rst:497
msgid "(Contributed by Roger D. Serwy; :issue:`5150`.)"
msgstr "(Contribución de Roger D. Serwy; :issue:`5150`.)"

#: ../Doc/whatsnew/3.1.rst:500
msgid "Build and C API Changes"
msgstr "Cambios en la compilación y la API de C"

#: ../Doc/whatsnew/3.1.rst:502
msgid "Changes to Python's build process and to the C API include:"
msgstr ""
"Los cambios en el proceso de compilación de Python y en la API C incluyen:"

#: ../Doc/whatsnew/3.1.rst:504
msgid ""
"Integers are now stored internally either in base ``2**15`` or in base "
"``2**30``, the base being determined at build time.  Previously, they were "
"always stored in base ``2**15``.  Using base ``2**30`` gives significant "
"performance improvements on 64-bit machines, but benchmark results on 32-bit "
"machines have been mixed.  Therefore, the default is to use base ``2**30`` "
"on 64-bit machines and base ``2**15`` on 32-bit machines; on Unix, there's a "
"new configure option ``--enable-big-digits`` that can be used to override "
"this default."
msgstr ""
"Los enteros ahora se almacenan internamente en base 2**15 o en base 2**30, "
"la base se determina en el momento de la construcción. Anteriormente, "
"siempre se almacenaban en base 2**15. El uso de base 2**30 ofrece mejoras "
"significativas en el rendimiento en máquinas de 64 bits, pero los resultados "
"de las pruebas comparativas en máquinas de 32 bits han sido diversos. Por lo "
"tanto, el valor predeterminado es usar base 2**30 en máquinas de 64 bits y "
"base 2**15 en máquinas de 32 bits; en Unix, hay una nueva opción de "
"configuración ``--enable-big-digits`` que puede ser usada para sobre "
"escribir este valor predeterminado."

#: ../Doc/whatsnew/3.1.rst:513
#, fuzzy
msgid ""
"Apart from the performance improvements this change should be invisible to "
"end users, with one exception: for testing and debugging purposes there's a "
"new :data:`sys.int_info` that provides information about the internal "
"format, giving the number of bits per digit and the size in bytes of the C "
"type used to store each digit::"
msgstr ""
"Aparte de las mejoras de rendimiento, este cambio debería ser invisible para "
"los usuarios finales, con una excepción: para propósitos de prueba y "
"depuración, hay un nuevo :attr:`sys.int_info` que proporciona información "
"sobre el formato interno, dando el número de bits por dígito y el tamaño en "
"bytes del tipo C utilizado para almacenar cada dígito::"

#: ../Doc/whatsnew/3.1.rst:519
msgid ""
">>> import sys\n"
">>> sys.int_info\n"
"sys.int_info(bits_per_digit=30, sizeof_digit=4)"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:523
msgid "(Contributed by Mark Dickinson; :issue:`4258`.)"
msgstr "(Contribución de Mark Dickinson; :issue:`4258`.)"

#: ../Doc/whatsnew/3.1.rst:525
msgid ""
"The :c:func:`PyLong_AsUnsignedLongLong()` function now handles a negative "
"*pylong* by raising :exc:`OverflowError` instead of :exc:`TypeError`."
msgstr ""
"La función :c:func:`PyLong_AsUnsignedLongLong()` es ahora capaz de manejar "
"un *pylong* negativo lanzando una excepción :exc:`OverflowError` en lugar "
"de :exc:`TypeError`."

#: ../Doc/whatsnew/3.1.rst:528
msgid "(Contributed by Mark Dickinson and Lisandro Dalcrin; :issue:`5175`.)"
msgstr "(Contribución de Mark Dickinson y Lisandro Dalcrin; :issue:`5175`.)"

#: ../Doc/whatsnew/3.1.rst:530
#, fuzzy
msgid ""
"Deprecated :c:func:`!PyNumber_Int`.  Use :c:func:`PyNumber_Long` instead."
msgstr ""
":c:func:`PyNumber_Int` está ahora obsoleto.  Utilice :c:func:`PyNumber_Long` "
"en su lugar."

#: ../Doc/whatsnew/3.1.rst:532
msgid "(Contributed by Mark Dickinson; :issue:`4910`.)"
msgstr "(Contribución de Mark Dickinson; :issue:`4910`.)"

#: ../Doc/whatsnew/3.1.rst:534
#, fuzzy
msgid ""
"Added a new :c:func:`PyOS_string_to_double` function to replace the "
"deprecated functions :c:func:`!PyOS_ascii_strtod` and :c:func:`!"
"PyOS_ascii_atof`."
msgstr ""
"Se agrega una nueva función :c:func:`PyOS_string_to_double` para reemplazar "
"las funciones obsoletas :c:func:`PyOS_ascii_strtod` y :c:func:"
"`PyOS_ascii_atof`."

#: ../Doc/whatsnew/3.1.rst:537
msgid "(Contributed by Mark Dickinson; :issue:`5914`.)"
msgstr "(Contribución de Mark Dickinson; :issue:`5914`.)"

#: ../Doc/whatsnew/3.1.rst:539
#, fuzzy
msgid ""
"Added :c:type:`PyCapsule` as a replacement for the :c:type:`!PyCObject` API. "
"The principal difference is that the new type has a well defined interface "
"for passing typing safety information and a less complicated signature for "
"calling a destructor.  The old type had a problematic API and is now "
"deprecated."
msgstr ""
"Se agrega :c:type:`PyCapsule` como un reemplazo para la API :c:type:"
"`PyCObject`. La principal diferencia es que el nuevo tipo tiene una interfaz "
"bien definida para pasar información de seguridad de escritura y una firma "
"menos complicada para llamar a un destructor. El tipo anterior tenía una API "
"problemática y ahora está obsoleta."

#: ../Doc/whatsnew/3.1.rst:545
msgid "(Contributed by Larry Hastings; :issue:`5630`.)"
msgstr "(Contribución de Larry Hastings; :issue:`5630`.)"

#: ../Doc/whatsnew/3.1.rst:548
msgid "Porting to Python 3.1"
msgstr "Portando a Python 3.1"

#: ../Doc/whatsnew/3.1.rst:550
msgid ""
"This section lists previously described changes and other bugfixes that may "
"require changes to your code:"
msgstr ""
"Esta sección enumera los cambios descritos anteriormente y otras "
"correcciones de errores que pueden requerir cambios en su código:"

#: ../Doc/whatsnew/3.1.rst:553
#, fuzzy
msgid ""
"The new floating-point string representations can break existing doctests. "
"For example::"
msgstr ""
"Las nuevas representaciones de cadenas de coma flotante pueden romper las "
"pruebas de documentación existentes. Por ejemplo::"

#: ../Doc/whatsnew/3.1.rst:556
msgid ""
"def e():\n"
"    '''Compute the base of natural logarithms.\n"
"\n"
"    >>> e()\n"
"    2.7182818284590451\n"
"\n"
"    '''\n"
"    return sum(1/math.factorial(x) for x in reversed(range(30)))\n"
"\n"
"doctest.testmod()\n"
"\n"
"**********************************************************************\n"
"Failed example:\n"
"    e()\n"
"Expected:\n"
"    2.7182818284590451\n"
"Got:\n"
"    2.718281828459045\n"
"**********************************************************************"
msgstr ""

#: ../Doc/whatsnew/3.1.rst:576
msgid ""
"The automatic name remapping in the pickle module for protocol 2 or lower "
"can make Python 3.1 pickles unreadable in Python 3.0.  One solution is to "
"use protocol 3.  Another solution is to set the *fix_imports* option to "
"``False``. See the discussion above for more details."
msgstr ""
"La reasignación automática de nombres en el módulo pickle para el protocolo "
"2 o inferior puede hacer que los pickles de Python 3.1 sean ilegibles en "
"Python 3.0.  Una solución es usar el protocolo 3.  Otra solución es "
"establecer la opción *fix_imports* en ``False``. Consulte la discusión "
"anterior para obtener más detalles."
